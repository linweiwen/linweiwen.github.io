<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HelloWorld</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://linww.in/"/>
  <updated>2016-03-12T15:54:14.581Z</updated>
  <id>http://linww.in/</id>
  
  <author>
    <name>Linww</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://linww.in/2016/04/22/Geekband%20Android%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>http://linww.in/2016/04/22/Geekband Android性能优化/</id>
    <published>2016-04-22T15:44:36.580Z</published>
    <updated>2016-03-12T15:54:14.581Z</updated>
    
    <content type="html">&lt;p&gt;#Geekband Android性能优化&lt;br&gt;[TOC]&lt;/p&gt;
&lt;p&gt;#一、内存优化&lt;/p&gt;
&lt;p&gt;##垃圾回收机制&lt;/p&gt;
&lt;p&gt;###什么是垃圾回收&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;麦卡锡John McCarthy 1959年提出&lt;/li&gt;
&lt;li&gt;首先在Lisp语言实现垃圾回收机制&lt;/li&gt;
&lt;li&gt;对比C/C++这种需要自己管理内存的语言(我们需要自己为对象申请内存空间并归还，稍有不慎就会造成内存泄漏。)&lt;/li&gt;
&lt;li&gt;由此，就有了自动内存管理和回收机制&lt;/li&gt;
&lt;li&gt;垃圾回收器负责回收程序中已经不使用，但仍然被各种对象占用的内存&lt;/li&gt;
&lt;li&gt;将程序员从繁重，危险的内存管理工作中解放出来&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：可能会占用大量资源&lt;/p&gt;
&lt;p&gt;###关于垃圾回收&lt;br&gt;（Android本身使用Java语言，具有垃圾回收机制。）&lt;br&gt;PPT内容 - Android平台最吸引开发者的一个特性：&lt;br&gt;有垃圾回收机制，无需手动管理内存，&lt;br&gt;Android系统会自动跟踪所有的对象，并释放那些不再被使用的对象。&lt;/p&gt;
&lt;p&gt;###Android中的垃圾回收机制&lt;/p&gt;
&lt;p&gt;虚拟机会把系统的区域，划分为三个区域：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Young Generation （新生代）&lt;/li&gt;
&lt;li&gt;Old Generation （老生代）&lt;/li&gt;
&lt;li&gt;Permanent Generation (永久代)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Young放生命周期比较短的，Old放生命周期比较长的，&lt;br&gt;永久代是就放一些静态信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Young Generation：&lt;/strong&gt;&lt;br&gt;又被分为三个区域，Eden/S0/S1 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大多数新建的对象都位于Eden区&lt;/li&gt;
&lt;li&gt;当Eden区被对象填满时，就会执行Minor GC。并把所有存活下来的对象转移到其中一个survivor区。&lt;/li&gt;
&lt;li&gt;Survivor Space:S0/S1 有两个，存放每次垃圾回收后存活的对象。&lt;/li&gt;
&lt;li&gt;Minor GC同样会检查survivor区中存活下来的对象，并把它们转移到另一个survivor区。这样在一段时间内，总会有一个空的survivor区。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Old Generation：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;存放长期存活的对象和经过多次Minor GC后依然存活下来的对象。&lt;/li&gt;
&lt;li&gt;满了进行Major GC。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Permanent Generation：&lt;/strong&gt;&lt;br&gt;存放方法区，方法区中有 要加载的类信息/静态变量/final类型的变量/属性和方法信息。&lt;/p&gt;
&lt;p&gt;备注：“Minor GC”是比较轻量的GC，执行时间较短;Major GC是比较重的GC，执行时间较长。&lt;/p&gt;
&lt;p&gt;###垃圾回收的例子&lt;/p&gt;
&lt;p&gt;上图黄点的地方，是进行垃圾回收的地方。&lt;/p&gt;
&lt;p&gt;内存占用过多，需要为新对象分配空间。&lt;/p&gt;
&lt;p&gt;不同的虚拟机在发生GC时采用的策略不同，可能会暂停当前程序的执行。&lt;/p&gt;
&lt;p&gt;大多数垃圾回收的时间我们都可以不需要关注，&lt;br&gt;而是更应该关注垃圾回收所带来的副级效果，它可能会带来一些明显的影响……&lt;/p&gt;
&lt;p&gt;###垃圾回收机制&amp;amp;FPS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android系统每隔16ms发出VSYNC信息，触发对UI进行渲染，那么整个过程如果保证在16ms以内，就能达到一个流畅的画面。60FPS。&lt;/li&gt;
&lt;li&gt;如果某一帧操作超过了16ms，就会达不到60FPS，就会让用户感到卡顿。&lt;/li&gt;
&lt;li&gt;(上面提到发生GC时，可能会暂停当前程序执行。)那么，如果UI渲染过程发生GC，导致某一帧绘制时间超过16ms，就达不到60FPS,用户就会觉得卡顿。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###典型场景：内存泄漏&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用程序分配了大量不能被回收的对象&lt;/li&gt;
&lt;li&gt;如果分配了大量不能回收的对象，系统可分配内存越来越少了&lt;/li&gt;
&lt;li&gt;就会导致新对象的创建需要的内存不够，就会调用GC&lt;/li&gt;
&lt;li&gt;GC之后再分配，&lt;/li&gt;
&lt;li&gt;这样就有可能导致上面FPS达不到60FPS而造成卡顿&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;##内存检测工具&lt;/p&gt;
&lt;p&gt;###三个工具&lt;br&gt;Android Studio提供了下列工具帮助我们分析应用的内存使用情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Memory Monitor&lt;/li&gt;
&lt;li&gt;Allocation Tracker&lt;/li&gt;
&lt;li&gt;Heap Viewer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###Memory Monitor&lt;br&gt;可选定要监控的“设备”以及“应用”，&lt;br&gt;图中蓝色就是应用所用内存，灰色是空闲内存，峰值就是发生了垃圾回收。&lt;/p&gt;
&lt;p&gt;###Allocation Tracker&lt;br&gt;用于跟踪对象内存分配的工具，追踪已分配的内存、创建的对象、对象的数量和它们所占的内存大小，以及这些对象是在哪被创建出来的等等信息。&lt;/p&gt;
&lt;p&gt;圆环由里到外，是不同包名所占用内存的大小。&lt;/p&gt;
&lt;p&gt;###由Allocation Tracker引入内存抖动的概念&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;内存抖动是因为在短时间内大量的对象被创建又马上被释放。瞬间产生大量的对象会严重占用Young Generation的内存区域，当达到阀值，剩余空间不够的时候，会触发GC从而导致刚产生的对象又很快被回收。即使每次分配的对象占用了很少的内存，但他们叠加在一起会增加Heap的压力，从而触发更多其他类型的GC。这个操作有可能会影响到帧率（达不到60FPS），并使用户感知到性能问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Allocation Tracker可以很方便地帮我们发现 内存抖动 的现象。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;上机：创建一个线程，线程里执行死循环，循环里不停地创建对象。再放两个按钮，一个启动线程，一个停止线程。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;###Heap Viewer&lt;/p&gt;
&lt;p&gt;Heap Viewer可以帮我们实时展示应用运行时所有已分配的对象大小、类型信息，&lt;br&gt;它可以帮我们检测内存泄漏的问题。&lt;/p&gt;
&lt;p&gt;上机：正常情况下，旋转屏幕后的Activity能被GC回收掉。但如果有静态变量，就不行了，通过Heap Viewer可以发现这个问题。&lt;/p&gt;
&lt;p&gt;###简单总结这三个工具&lt;/p&gt;
&lt;p&gt;1.Memory Monitor&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方便显示内存使用和GC情况&lt;/li&gt;
&lt;li&gt;快速定位卡顿是否和GC有关&lt;/li&gt;
&lt;li&gt;快速定位Crash是否和内存占用过高有关&lt;/li&gt;
&lt;li&gt;快速定位潜在的内存泄漏问题（那条线会一直增长）&lt;/li&gt;
&lt;li&gt;简单易用&lt;/li&gt;
&lt;li&gt;不能准确定位问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.Allocation Tracker&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定位代码中分配对象的类型、大小、时间、线程、堆栈等信息&lt;/li&gt;
&lt;li&gt;定位内存抖动问题&lt;/li&gt;
&lt;li&gt;配合Heap Viewer一起定位内存泄漏问题&lt;/li&gt;
&lt;li&gt;使用复杂&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.Heap Viewer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内存快照信息（实效性好）&lt;/li&gt;
&lt;li&gt;每次GC之后收集一次信息&lt;/li&gt;
&lt;li&gt;查找内存泄漏利器&lt;/li&gt;
&lt;li&gt;使用复杂&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###LeakCanary&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A memory leak detection library for Android and Java&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/square/leakcanary&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/square/leakcanary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;查找内存泄漏的神器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由square开发的检测内存泄漏的库。&lt;br&gt;如果发生内存泄漏，会在通知栏发出通知。&lt;br&gt;把LeakCanary添加到我们的项目，只要在Gradle加两句，&lt;br&gt;并在Application类的onCreate方法中install。&lt;/p&gt;
&lt;p&gt;##常用问题以及如何避免&lt;/p&gt;
&lt;p&gt;###单例造成的泄漏&lt;/p&gt;
&lt;p&gt;单例模式很常用，而Android又有不少地方需要用到Context，&lt;br&gt;就有可能出现下面这样的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class AppManager&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private static AppManager instance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private Context context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private AppManager(Context context)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	this.context = context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static AppManager getInstance(Context context)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	if(instance!=null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	instance = new AppManager(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return instance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;问题可能出在调用方，调用方可能不知道我们这里需要的是ApplicationContext，&lt;br&gt;而把Activity传到getInstance(Context context)得到Context的实例,&lt;br&gt;上面的代码中instance是静态变量，在整个应用生命周期都不会被回收，&lt;br&gt;而如果把Activity传进来，那么这个Activity被销毁后也不会被垃圾回收，&lt;br&gt;因为有一个静态变量一直持有它的引用，从而造成内存泄漏。&lt;/p&gt;
&lt;p&gt;###非静态内部类的静态实例造成的泄漏&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class MainActivity extends Activity&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private static TestResource sResource = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    protected void onCreate(Bundle savedInstanceState)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	super.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(sResource==null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	sResource = new TestResource();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    class TestResource&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	//...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;sResource也是不会被回收的，并且一直持有MainActivity的引用，&lt;br&gt;从而导致MainActivity也无法被垃圾回收。&lt;/p&gt;
&lt;p&gt;###Handler造成的内存泄漏&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class MainActivity extends Activity&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private Handler mHandler = new Handler()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        public void handleMessage(Message msg)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    protected void onCreate(Bundle savedInstanceState)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	super.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setContentView(R.layout.activity_main);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loadData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private void loadData()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	//...request&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Message message = Message.obtain();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mHandler.sendMessage(message);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的写法也是很常见，mHandler其实是会持有MainActivity的引用的，&lt;br&gt;它的存活周期可能会比MainActivity还长，&lt;br&gt;可能MainActivity被销毁了，Handler还没有结束。&lt;/p&gt;
&lt;p&gt;###避免内存泄漏的方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尽量不要让静态变量引用Activity&lt;/li&gt;
&lt;li&gt;使用WeakReference&lt;/li&gt;
&lt;li&gt;使用静态内部类来代替内部类&lt;/li&gt;
&lt;li&gt;静态内部类使用弱引用来引用外部类&lt;/li&gt;
&lt;li&gt;在生命周期结束时释放资源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###减少内存使用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用更轻量的数据结构（比如SpareArray代替HashMap）&lt;/li&gt;
&lt;li&gt;避免在onDraw方法中创建对象（onDraw被调用的情况会很多，在里面创建临时对象有可能产生内存抖动）&lt;/li&gt;
&lt;li&gt;对象池（先去查找是否已经有创建了这个对象，Message.obtain()）&lt;/li&gt;
&lt;li&gt;LRUCache&lt;/li&gt;
&lt;li&gt;Bitmap内存复用，压缩（inSampleSize，inBitmap）&lt;/li&gt;
&lt;li&gt;StringBuilder&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;#二、视图优化&lt;/p&gt;
&lt;p&gt;###Why 60FPS&lt;br&gt;60FPS或16ms每帧。&lt;br&gt;60FPS ： 1秒显示60帧画面。&lt;/p&gt;
&lt;p&gt;为什么是60FPS？&lt;br&gt;要从大脑说起，它可以将连续的静态画面产生动态的效果，&lt;br&gt;要让大脑能感受到动画的效果，至少要达到10～12帧每秒，&lt;br&gt;如果要让大脑感受频繁动画的效果，至少要24帧每秒，这对大脑来说已经非常连续，&lt;br&gt;当帧率达到60帧每秒，已经是基本上最流畅的了。&lt;/p&gt;
&lt;p&gt;###VSYNC&lt;br&gt;刷新率：硬件刷新频率&lt;br&gt;Android中大部分情况就是屏幕的刷新频率。&lt;/p&gt;
&lt;p&gt;帧率：GPU一秒内可以绘制的帧数。&lt;/p&gt;
&lt;p&gt;帧率和刷新率一起配合，才能保证我们应用完美地渲染出来。&lt;/p&gt;
&lt;p&gt;GPU会源源不断地朝缓冲区中存入图像数据，屏幕也会定期、持续从缓存区中读取图像。&lt;/p&gt;
&lt;p&gt;GPU产生图像的速率是大于屏幕产生图像的速率的。&lt;/p&gt;
&lt;p&gt;###真实例子&lt;br&gt;Google办公室一角的照片。&lt;br&gt;撕裂现象，整张图片有一个割裂的效果。&lt;br&gt;GPU在图例图像数据时，会将数据结果按一行一行将图像数据从上到下写入图像，&lt;br&gt;而屏幕读取时候时，是不知道图像是否已经写入完了，它是整张的区域去读取的，&lt;/p&gt;
&lt;p&gt;###双缓冲机制&lt;/p&gt;
&lt;p&gt;GPU把缓冲数据写入到Back Buffer区域中，&lt;br&gt;而屏幕读取数据则是从Frame Buffer区域读取，&lt;br&gt;Back Buffer会定期地将数据同步到Frame Buffer中，&lt;br&gt;VSYNC可以保证屏幕在读取Frame Buffer时，不会将Back Buffer的数据写入到Frame Buffer，&lt;br&gt;这样就可以解决上面的撕裂现象。&lt;/p&gt;
&lt;p&gt;###帧率&amp;lt;刷新率&lt;br&gt;如果屏幕的刷新频率大于帧率，&lt;br&gt;这样就会出现屏幕两次刷新中，只渲染了一帧的图像，&lt;br&gt;因此我们要保证GPU渲染足够快。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;#四、Bitmap优化&lt;/p&gt;
&lt;p&gt;##复用Bitmap&lt;/p&gt;
&lt;p&gt;###Bitmap decode&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常见的jpg、png、webp是图像的存储格式&lt;/li&gt;
&lt;li&gt;Android中要显示图片必须先经过解码（decode）读取图像的数据到内存中&lt;/li&gt;
&lt;li&gt;BitmapFactory提供了常用的一些decode方法&lt;/li&gt;
&lt;li&gt;图片真正占用的内存大小要看decode之后的数据大小&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1.图像存储格式&lt;br&gt;jpg是有损压缩格式，当图片色彩比较丰富时，压缩效果就比较明显。&lt;br&gt;png是为了取代gif，采用无损压缩格式。&lt;br&gt;webp是Google近几年推出的格式，可以在采用无损压缩的情况下，极大地压缩体积。&lt;/p&gt;
&lt;p&gt;2.解码&lt;br&gt;解码就是将图像数据读取到内存，然后转换成GPU能读取的格式。&lt;/p&gt;
&lt;p&gt;3.Android使用BitmapFactory进行解码&lt;/p&gt;
&lt;p&gt;###Bitmap memory&lt;br&gt;位图解码后的大小，在Android不同版本，其实是有所不同的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;lt;=2.3.3(api 10)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bitmap解码之后的数据存储在Native Memory中&lt;/li&gt;
&lt;li&gt;手动调用Recycle回收&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也就是我们要手动调用Recycle方法去回收这块内存，&lt;br&gt;因为这块内存是在C++那一层的，没有Java的垃圾回收机制。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&amp;gt;=3.0(api 11)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bitmap解码之后的数据存储在Dalvik heap中&lt;/li&gt;
&lt;li&gt;Dalvik自动回收&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里就有了垃圾回收机制，自动帮我们判断Bitmap内存的情况。&lt;/p&gt;
&lt;p&gt;###Re-using Bitmaps&lt;br&gt;Bitmap成为可能导致内存抖动的元凶。&lt;/p&gt;
&lt;p&gt;从上图可以，每当要一个Bitmap对象要创建，&lt;br&gt;因为它需要一块连续的内存空间才能显示，&lt;br&gt;如果当时不够内存，系统就进行垃圾回收腾出空间，&lt;br&gt;一旦频繁产生Bitmap，就有可能产生内存抖动，造成卡顿。&lt;br&gt;那么，如何避免这种现象呢？&lt;/p&gt;
&lt;p&gt;使用对象池去复用对象，这样就不用系统每次分配一块新的内存。&lt;/p&gt;
&lt;p&gt;所谓对象池（Object pool），&lt;br&gt;其实就是一块内存缓冲区间，程序启动时预先向Java虚拟机申请一块区域，&lt;br&gt;用这块区域当缓冲区间来当对象池使用。&lt;/p&gt;
&lt;p&gt;接下来所有某一类型对象的创建，都是放到这块内存中，&lt;br&gt;一旦这块内存被占满，新来的会按照算法淘汰掉老的、不用的旧对象，&lt;br&gt;这样就避免了在创建信的对象区域。&lt;/p&gt;
&lt;p&gt;好处：避免了JVM再进行内存分配及可能产生的垃圾回收。&lt;/p&gt;
&lt;p&gt;例子：&lt;br&gt;连续显示好几张jpg图片，具体看图。（13：58）&lt;/p&gt;
&lt;p&gt;在Android中实现这种效果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mBitmapOptions.inBitmap = mCurrentBitmap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//will reuse the mCurrentBitmap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//(or not,depending on if in Bitmap is set)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mCurrentBitmap = BitmapFactory.decodeFile(fileName,mBitmapOptions)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面写法的局限性，在api 11-18，&lt;br&gt;上面的写法复用的Bitmap必须宽高一样才能被复用，&lt;br&gt;否则会失效。&lt;br&gt;api 19+后就做了比较好的改进，不再强制要求宽高严格相等，&lt;br&gt;只要被复用的Bitmap的宽高比要复用它空间的空间大就可以了。&lt;/p&gt;
&lt;p&gt;我们在复用Bitmap时，不但要考虑宽高，&lt;br&gt;还要考虑像素格式是否一致，如果不一致，也是没法复用的。&lt;br&gt;比较好的做法就是在对象池中分类，提供各种像素格式的对象。&lt;/p&gt;
&lt;p&gt;第三方库：glide。&lt;/p&gt;
&lt;p&gt;##预压缩Bitmap&lt;/p&gt;
&lt;p&gt;我获取的图片很大，但我其实只是需要一个缩略图。&lt;/p&gt;
&lt;p&gt;截图可见（2：20），压缩后可以极大地节约内存。&lt;/p&gt;
&lt;p&gt;Android提供了API做这种事情，&lt;br&gt;其中一个就是createSacledBitmap(inBmp，64,128)，&lt;br&gt;缺陷就是Bitmap必须已经加载到内存，这样意义就不大了。&lt;/p&gt;
&lt;p&gt;另一个方法(比较简单粗暴)：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mBitmapOptions.inSampleSize = 4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//will load&amp;amp;resize the image to be 1/inSampleSize dimensions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mCurrentBitmap = BitmapFactory.decodeFile(fileName,mBitmapOptions);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面这样，就会缩小到原图的1/4大小。&lt;br&gt;工作原理就是类似与每4个像素，就只取1个像素(7:00)。&lt;/p&gt;
&lt;p&gt;又一种方法：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mBitmapOptions.inScaled = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mBitmapOptions.inDensity = srcWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mBitmapOptions.inTargetDensity = dstWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//will load &amp;amp; resize the image to be 1/inSampleSize dimensions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mCurrentBitmap = BitmapFactory.decodeResources(getResources(),mImageIDs,mBitmapOptions);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;bimapfactory.cpp&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    if(inScaled)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(inDensity!=0&amp;amp;&amp;amp;inTargetDensity!=0&amp;amp;&amp;amp;inDensity!=inScreenDensity)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	scale = (float)inTargetDensity/inDensity;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通常我们会把inSampleSize和“inScaled”/“inDensity”这两个属性结合起来使用，&lt;br&gt;先缩小，缩放。如下所示：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mBitmapOptions.inScaled = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mBitmapOptions.inSampleSize = 4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mBitmapOptions.inDensity = srcWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mBitmapOptions.inTargetDensity = dstWidth*mBitmap.imSampleSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//will load&amp;amp;resize the image to be 1/inSampleSize dimensions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mCurrentBitmap = BitmapFactory.decodeResources(filename,mBitmapOptions);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;复杂的缩小是在小图上做的，比直接缩小原图效率高。&lt;/p&gt;
&lt;p&gt;那么，我们如何去获取原图的宽高呢？&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mBitmapOptions.inJustDecodeBounds = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BitmapFactory.decodeFile(filename,mBitmapOptions);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;srcWidth = mBitmapOptions.outWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;srcHeight = BitmapOptions.outHeight;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;代码片段展示：（13：54）&lt;/p&gt;
&lt;p&gt;##减小占用字节&lt;/p&gt;
&lt;p&gt;还可以通过减少每隔像素的字节数来达到减少内存占用的目的。&lt;br&gt;通过尽量减少Bitmap内存占用，优化性能。&lt;/p&gt;
&lt;p&gt;不管什么格式的图像，都要经过解码才能在屏幕上显示，&lt;br&gt;PNG - Decompress - Use on the CPU - CPU。&lt;/p&gt;
&lt;p&gt;PNG格式，每个像素需要4个字节，ARGB，&lt;/p&gt;
&lt;p&gt;##LRUCache介绍&lt;/p&gt;
&lt;p&gt;#五、其他优化&lt;br&gt;杂七杂八的知识点&lt;/p&gt;
&lt;p&gt;##Profiling与Lint&lt;/p&gt;
&lt;p&gt;###Method Profiling&lt;br&gt;Profiling可以帮助我们在程序运行时，&lt;br&gt;每个方法所消耗的时间。&lt;/p&gt;
&lt;p&gt;每种颜色对应不同的方法，通过颜色可见哪个方法占用时间最长或占用CPU最多。&lt;/p&gt;
&lt;p&gt;上机点击一个按钮，启动下面的&lt;code&gt;makeCpuBusy()&lt;/code&gt;方法：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private void makeCpuBusy()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Integer sum = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for(int i=0;i&amp;lt;10000;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	System.out.println(&amp;quot;-----&amp;quot;+i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sum += i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&amp;quot;sum&amp;quot;+sum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;就是不让CPU闲着，让它一直在打印，然后通过Profiling进行观察。&lt;br&gt;打开Profiling最简单的方法就是打开Android Device Monitor，&lt;br&gt;选中我们应用的进程，上面会有个“start Method Profiling”的按钮。&lt;br&gt;点击下方列表中“Incl Cpu Time”的栏目进行排序，&lt;br&gt;即可找出那些比较耗费Cpu资源的方法。&lt;br&gt;找到方法后，就能对症下药地改进了。&lt;/p&gt;
&lt;p&gt;###Lint Tool&lt;/p&gt;
&lt;p&gt;Lint工具会对Java代码做一些检查，检测出程序潜在的问题，&lt;br&gt;检查可用性、安全性、国际化等等问题，&lt;br&gt;我们还可以配置Lint工具，让其只检查我们关心的部分，例如性能问题。&lt;/p&gt;
&lt;p&gt;使用Lint的三种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Release Builds （如果我们打Release包，Gradle会默认启用Lint检查，以Log形式告诉我们）&lt;/li&gt;
&lt;li&gt;Command Line （可以用命令行使用Lint）&lt;/li&gt;
&lt;li&gt;Manually （比较常用的方式，在Android Studio手动去使用Lint工具）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用Lint工具，在Android Studio中点击上方”Analyze”菜单，&lt;br&gt;选中”Inspect Code”，就可以了。&lt;br&gt;视频中是针对整个项目进行分析。&lt;/p&gt;
&lt;p&gt;打开Android Studio的settings，然后选“Inspections”，&lt;br&gt;可以对Lint工具进行配置，里面有一堆Lint的配置选项。&lt;/p&gt;
&lt;p&gt;##使用轻量容器&lt;/p&gt;
&lt;p&gt;Profiling和Lint都是在写完代码后去检查，其实还可以写代码时检查。&lt;/p&gt;
&lt;p&gt;###Android-Specific containers&lt;/p&gt;
&lt;p&gt;下面两个表格只是引子，做个参考。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Primitive Sizes&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类型&lt;/th&gt;
&lt;th&gt;所占字节&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;8bits&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;32bits&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;32bits&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;long&lt;/td&gt;
&lt;td&gt;64bits&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Object Sizes&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;基本类型&lt;/th&gt;
&lt;th&gt;包装类型&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;java.lang.Boolean&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;java.lang.Integer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;td&gt;java.lang.Float&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;###Auto-Boxing&lt;br&gt;例如HashMap中，必须传入的是对象，&lt;br&gt;Java会有自动装箱功能，将基本类型转为对应的包装类型。&lt;/p&gt;
&lt;p&gt;包装类型比基本类型所占空间要大，不注意的话，&lt;br&gt;就可以造成资源的浪费。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int total = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for(int i=0;i&amp;lt;100;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	total+=i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Integer total = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for(int i=0;i&amp;lt;100;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	total+=i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面代码中，下面代码占用内存比上面的多得多。&lt;/p&gt;
&lt;p&gt;我们可以通过之前学的Allocation Tracker观察到这种情况。&lt;/p&gt;
&lt;p&gt;为了避免上面提到的使用HashMap过程中自动装箱、拆箱带来的内存占用更多的问题，&lt;br&gt;可以不用Java的HashMap，而去使用Android提供的容器。&lt;/p&gt;
&lt;p&gt;###NoBoxing containers：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;容器&lt;/th&gt;
&lt;th&gt;键值对类型&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HashMap&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;obj,obj&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SparseBoolMap&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;bool,obj&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SparseIntMap&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;int,obj&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SparseLongMap&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;long,obj&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LongSparseMap&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;long,obj&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;上面那些没有Autoboxing的容器，其实是基于ArrayMaps基础上实现的。&lt;br&gt;ArrayMaps它的key所占的空间比HashMap的key空间小很多。&lt;/p&gt;
&lt;p&gt;###SparseArray&lt;/p&gt;
&lt;p&gt;使用SparseArray最大的好处，就是我们可以用索引来遍历，&lt;br&gt;而不需要像HashMap那样用iterator来遍历。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//ArrayMap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   for(int i=0;i&amp;lt;map.size();i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	  Object keyObj = map.keyAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	  Object valObj = map.valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   //HashMap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   for(Iterator it = map.iteraotr;it.hasNext;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	  Object obj = it.next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Android提供了一系列SparseArray&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;android.util.SparseArray&lt;/li&gt;
&lt;li&gt;android.util.SparseBooleanArray&lt;/li&gt;
&lt;li&gt;android.util.SparseIntArray&lt;/li&gt;
&lt;li&gt;android.util.SparseLongArray&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但并不是什么时候都适合用SparseArray的，&lt;br&gt;使用SparseArray最主要适合下面两个场景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对象比较少，一般少于1000个（会频繁对容器内元素进行访问，越频繁越显得高效）&lt;/li&gt;
&lt;li&gt;容器中嵌套容器（例如HashMap中又需要有HashMap的情况）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;###HashMap memory&lt;/p&gt;
&lt;p&gt;HashMap的内存分配情况：&lt;br&gt;HashMap在创建时首先会分配比较大的数组空间，&lt;br&gt;用来存放key的hash值。即使它没有存放任何元素，&lt;br&gt;这块区域其实已经浪费了空间了。&lt;/p&gt;
&lt;p&gt;而ArrayMap则没有这样的情况。&lt;/p&gt;
&lt;p&gt;总之，容器方面就是使用ArrayMap和SparseMap。&lt;/p&gt;
&lt;p&gt;##枚举的使用&lt;/p&gt;
&lt;p&gt;我们要注意枚举的使用，它对我们应用的影响主要有两个方面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;体积的影响&lt;/li&gt;
&lt;li&gt;运行时对性能的影响&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例如如果三个变量，用int类型增加124字节，而用枚举则是用int类型的13倍。&lt;br&gt;Android启动时是很关注dex的大小的，dex体积越大，所占内存更高。&lt;/p&gt;
&lt;p&gt;另外，使用枚举，运行时所需内存也会大大增多。&lt;/p&gt;
&lt;p&gt;枚举的好处，就是可以减少类型错误，不需要我们额外进行检查，&lt;br&gt;可以让编译器帮我们去检查。&lt;/p&gt;
&lt;p&gt;Android的Support包提供了注解，让int类型具有枚举的效果：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Retention(CLASS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@IntDef(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NAVIGATION_MODE_STANDARD,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NAVIGATION_MODE_LIST,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   NAVIGATION_MODE_TABS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   public @interface NavigationMode&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   public static final int NAVIGATION_MODE_STANDARD = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   public static final int NAVIGATION_MODE_LIST = 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   public static final int NAVIGATION_MODE_TABS = 2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   public abstract void setNavigationMode(@NavigationMode int mode)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   @NavigationMode&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   public abstract int getNavigationMode();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;#Geekband Android性能优化&lt;br&gt;[TOC]&lt;/p&gt;
&lt;p&gt;#一、内存优化&lt;/p&gt;
&lt;p&gt;##垃圾回收机制&lt;/p&gt;
&lt;p&gt;###什么是垃圾回收&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;麦卡锡John McCarthy 1959年提出&lt;/li&gt;
&lt;li&gt;首先在Lisp语言实
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://linww.in/2016/04/22/2.%E2%80%9C%E6%99%BA%E6%85%A7%E5%8C%97%E4%BA%AC%E2%80%9D%E7%AC%AC%E4%BA%8C%E5%A4%A9%20%E7%AC%94%E8%AE%B0/"/>
    <id>http://linww.in/2016/04/22/2.“智慧北京”第二天 笔记/</id>
    <published>2016-04-22T15:44:25.928Z</published>
    <updated>2016-03-20T16:20:12.366Z</updated>
    
    <content type="html">&lt;h1 id=&quot;“智慧北京”第二天-笔记&quot;&gt;&lt;a href=&quot;#“智慧北京”第二天-笔记&quot; class=&quot;headerlink&quot; title=&quot;“智慧北京”第二天 笔记&quot;&gt;&lt;/a&gt;“智慧北京”第二天 笔记&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;第一天总结-amp-今天内容&quot;&gt;&lt;a href=&quot;#第一天总结-amp-今天内容&quot; class=&quot;headerlink&quot; title=&quot;第一天总结 &amp;amp; 今天内容&quot;&gt;&lt;/a&gt;第一天总结 &amp;amp; 今天内容&lt;/h2&gt;&lt;p&gt;总结的那些知识点就省略了，&lt;br&gt;记得不要把自己的思维局限在老师讲的项目，&lt;br&gt;要把它扩展出去，多观察其他实际应用中类似的功能。&lt;/p&gt;
&lt;p&gt;第二天就是实现底部五个Tab的功能和实现一些侧边栏具体栏目的功能。&lt;/p&gt;
&lt;h2 id=&quot;主页面框架-amp-RadioButton&quot;&gt;&lt;a href=&quot;#主页面框架-amp-RadioButton&quot; class=&quot;headerlink&quot; title=&quot;主页面框架 &amp;amp; RadioButton&quot;&gt;&lt;/a&gt;主页面框架 &amp;amp; RadioButton&lt;/h2&gt;&lt;p&gt;主页面 = 下面底部栏 + 上面具体栏目内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;因为下面底部栏一次只能选一个，这里选择RadioButton实现;&lt;/li&gt;
&lt;li&gt;上面具体栏目的整体框架，用ViewPager实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;1.先写一个RadioButton的情况&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;LinearLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xmlns:tools=&amp;quot;http://schemas.android.com/tools&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_width=&amp;quot;match_parent&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_height=&amp;quot;match_parent&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:orientation=&amp;quot;vertical&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;com.itheima.zhbj52.view.NoScrollViewPager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:id=&amp;quot;@+id/vp_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_width=&amp;quot;match_parent&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_height=&amp;quot;0dp&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_weight=&amp;quot;1&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;RadioGroup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:id=&amp;quot;@+id/rg_group&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_width=&amp;quot;match_parent&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_height=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:background=&amp;quot;@drawable/bottom_tab_bg&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:orientation=&amp;quot;horizontal&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;RadioButton&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:id=&amp;quot;@+id/rb_setting&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            style=&amp;quot;@style/BottomTabStyle&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:layout_width=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:layout_height=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:layout_gravity=&amp;quot;center_vertical&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:button=&amp;quot;@null&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:drawablePadding=&amp;quot;3dp&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:padding=&amp;quot;5dp&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:textColor=&amp;quot;@drawable/btn_tab_text_selector&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:layout_weight=&amp;quot;1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:gravity=&amp;quot;center&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:drawableTop=&amp;quot;@drawable/btn_tab_setting_selector&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:text=&amp;quot;设置&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/RadioGroup&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.提取RadioButton的样式到style文件&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 低栏RadioButton的样式 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;style name=&amp;quot;BottomTabStyle&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;item name=&amp;quot;android:layout_width&amp;quot;&amp;gt;wrap_content&amp;lt;/item&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;item name=&amp;quot;android:layout_height&amp;quot;&amp;gt;wrap_content&amp;lt;/item&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;item name=&amp;quot;android:layout_gravity&amp;quot;&amp;gt;center_vertical&amp;lt;/item&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;item name=&amp;quot;android:button&amp;quot;&amp;gt;@null&amp;lt;/item&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;item name=&amp;quot;android:drawablePadding&amp;quot;&amp;gt;3dp&amp;lt;/item&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;item name=&amp;quot;android:padding&amp;quot;&amp;gt;5dp&amp;lt;/item&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;item name=&amp;quot;android:textColor&amp;quot;&amp;gt;@drawable/btn_tab_text_selector&amp;lt;/item&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;item name=&amp;quot;android:layout_weight&amp;quot;&amp;gt;1&amp;lt;/item&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;item name=&amp;quot;android:gravity&amp;quot;&amp;gt;center&amp;lt;/item&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/style&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.整个“fragment_content.xml”的代码如下所示&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;LinearLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xmlns:tools=&amp;quot;http://schemas.android.com/tools&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_width=&amp;quot;match_parent&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_height=&amp;quot;match_parent&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:orientation=&amp;quot;vertical&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;com.itheima.zhbj52.view.NoScrollViewPager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:id=&amp;quot;@+id/vp_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_width=&amp;quot;match_parent&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_height=&amp;quot;0dp&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_weight=&amp;quot;1&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;RadioGroup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:id=&amp;quot;@+id/rg_group&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_width=&amp;quot;match_parent&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_height=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:background=&amp;quot;@drawable/bottom_tab_bg&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:orientation=&amp;quot;horizontal&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;RadioButton&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:id=&amp;quot;@+id/rb_home&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            style=&amp;quot;@style/BottomTabStyle&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:drawableTop=&amp;quot;@drawable/btn_tab_home_selector&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:text=&amp;quot;首页&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;RadioButton&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:id=&amp;quot;@+id/rb_news&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            style=&amp;quot;@style/BottomTabStyle&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:drawableTop=&amp;quot;@drawable/btn_tab_news_selector&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:text=&amp;quot;新闻中心&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;RadioButton&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:id=&amp;quot;@+id/rb_smart&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            style=&amp;quot;@style/BottomTabStyle&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:drawableTop=&amp;quot;@drawable/btn_tab_smart_selector&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:text=&amp;quot;智慧服务&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;RadioButton&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:id=&amp;quot;@+id/rb_gov&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            style=&amp;quot;@style/BottomTabStyle&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:drawableTop=&amp;quot;@drawable/btn_tab_gov_selector&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:text=&amp;quot;政务&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;RadioButton&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:id=&amp;quot;@+id/rb_setting&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            style=&amp;quot;@style/BottomTabStyle&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:drawableTop=&amp;quot;@drawable/btn_tab_setting_selector&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            android:text=&amp;quot;设置&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/RadioGroup&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;“智慧北京”第二天-笔记&quot;&gt;&lt;a href=&quot;#“智慧北京”第二天-笔记&quot; class=&quot;headerlink&quot; title=&quot;“智慧北京”第二天 笔记&quot;&gt;&lt;/a&gt;“智慧北京”第二天 笔记&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;第一天总结-amp-今天
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://linww.in/2016/04/22/1.%20%E2%80%9C%E6%99%BA%E6%85%A7%E5%8C%97%E4%BA%AC%E2%80%9D%E7%AC%AC%E4%B8%80%E5%A4%A9%20%E7%AC%94%E8%AE%B0/"/>
    <id>http://linww.in/2016/04/22/1. “智慧北京”第一天 笔记/</id>
    <published>2016-04-22T15:44:25.924Z</published>
    <updated>2016-03-20T14:47:19.590Z</updated>
    
    <content type="html">&lt;h1 id=&quot;“智慧北京”第一天-笔记&quot;&gt;&lt;a href=&quot;#“智慧北京”第一天-笔记&quot; class=&quot;headerlink&quot; title=&quot;“智慧北京”第一天 笔记&quot;&gt;&lt;/a&gt;“智慧北京”第一天 笔记&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;一、项目介绍&quot;&gt;&lt;a href=&quot;#一、项目介绍&quot; class=&quot;headerlink&quot; title=&quot;一、项目介绍&quot;&gt;&lt;/a&gt;一、项目介绍&lt;/h2&gt;&lt;h3 id=&quot;黑马项目的介绍&quot;&gt;&lt;a href=&quot;#黑马项目的介绍&quot; class=&quot;headerlink&quot; title=&quot;黑马项目的介绍&quot;&gt;&lt;/a&gt;黑马项目的介绍&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;手机卫士：最重要，不能算是一个项目，但却是把知识点集合的一个大Demo，敲得熟练那么Android基础和敲代码的能力就没问题了。但因为这种产品不赚钱，所以不能拿去面试。&lt;/li&gt;
&lt;li&gt;智慧北京：第二重要，从实际项目抽取而成 。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;会“敲代码”比“掌握各种知识点”重要&quot;&gt;&lt;a href=&quot;#会“敲代码”比“掌握各种知识点”重要&quot; class=&quot;headerlink&quot; title=&quot;会“敲代码”比“掌握各种知识点”重要&quot;&gt;&lt;/a&gt;会“敲代码”比“掌握各种知识点”重要&lt;/h3&gt;&lt;p&gt;“要学技术点，永远学不完，不可能把知识点学完。真正重要的是编码能力，知识点不知道回头会查就是了。自己要能够亲手去敲代码才是最重要的。敲代码就是在吸收知识点，不要手机卫士没搞定又去敲智慧北京，发现不熟练又回去复习手机卫士。”&lt;/p&gt;
&lt;h3 id=&quot;“智慧北京”概览&quot;&gt;&lt;a href=&quot;#“智慧北京”概览&quot; class=&quot;headerlink&quot; title=&quot;“智慧北京”概览&quot;&gt;&lt;/a&gt;“智慧北京”概览&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;新手引导页&lt;/li&gt;
&lt;li&gt;下面有五个Tab&lt;/li&gt;
&lt;li&gt;我们重点就是掌握“新闻中心”栏目的做法&lt;/li&gt;
&lt;li&gt;有“侧边栏”，并且侧边栏可以切换&lt;/li&gt;
&lt;li&gt;“新闻中心”有轮播图&lt;/li&gt;
&lt;li&gt;然后有ListView的新闻标题，点进去可以看新闻&lt;/li&gt;
&lt;li&gt;具体新闻页面可以选择字体大小，并且可以分享&lt;/li&gt;
&lt;li&gt;“组图”有大图，并且可以改变展现形式&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;二、工作流程-1&quot;&gt;&lt;a href=&quot;#二、工作流程-1&quot; class=&quot;headerlink&quot; title=&quot;二、工作流程(1)&quot;&gt;&lt;/a&gt;二、工作流程(1)&lt;/h2&gt;&lt;p&gt;大家可能会有这样的顾虑，没有实际开发经验，不知道实际工作中的流程，&lt;br&gt;所以先让大家了解一些实际工作中的一些人一些事。只说跟我们息息相关的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下面是一些公司里的角色：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;产品经理 1个：提需求, 需求文档（word文档或者可以交互的网页）&lt;/li&gt;
&lt;li&gt;Android开发工程师 5个以内(3个左右) 开发周期3个月&lt;/li&gt;
&lt;li&gt;服务器开发人员(3个左右)：接口文档&lt;/li&gt;
&lt;li&gt;视觉设计师(美工)：提供图片、 效果图、1280*720(主流屏幕)、切图(drawable下的图片)&lt;/li&gt;
&lt;li&gt;测试人员：测试&lt;/li&gt;
&lt;li&gt;运营：产品推广, 想方设法让使用量更广, 打广告,发微博,写软文&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;三、工作流程-2&quot;&gt;&lt;a href=&quot;#三、工作流程-2&quot; class=&quot;headerlink&quot; title=&quot;三、工作流程(2)&quot;&gt;&lt;/a&gt;三、工作流程(2)&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;老总、产品经理需求分析&lt;/li&gt;
&lt;li&gt;产品经理整理产品文档&lt;/li&gt;
&lt;li&gt;项目经理进行需求评估：预估一个模块（天/1人力），评估几个月开发完成&lt;/li&gt;
&lt;li&gt;产品经理会根据此时间评估上线时间&lt;/li&gt;
&lt;li&gt;项目经理分配任务：根据个人水平分配&lt;/li&gt;
&lt;li&gt;开发人员进行项目开发&lt;/li&gt;
&lt;li&gt;项目经理可能会根据燃尽图监督进度&lt;/li&gt;
&lt;li&gt;测试花1-2周测试：用monkey测试或人力测试；测试用例,回归测试，第二轮测试;&lt;/li&gt;
&lt;li&gt;不可能一点Bug都没有：A(非常严重), B(严重), C(一般), D() bug分级别, A和B必须改。&lt;/li&gt;
&lt;li&gt;上线：打包apk, 发给产品/运营人员, 提交各个应用市场。30+个应用市场。&lt;/li&gt;
&lt;li&gt;版本更新(改上一版本的bug并增加新功能), 20天-30天会有一次版本的迭代 。&lt;/li&gt;
&lt;li&gt;中途有可能有需求变更&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;四、闪屏页开发&quot;&gt;&lt;a href=&quot;#四、闪屏页开发&quot; class=&quot;headerlink&quot; title=&quot;四、闪屏页开发&quot;&gt;&lt;/a&gt;四、闪屏页开发&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.新建一个项目“zhbj52”，包名为“com.itheima.zhbj52”，放到SVN文件夹下。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.观察现有的“智慧北京”项目的闪屏页，有以下三种动画效果：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;旋转 RotateAnimation&lt;/li&gt;
&lt;li&gt;缩放 ScaleAnimation&lt;/li&gt;
&lt;li&gt;渐变 AlphaAnimation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3.把&lt;code&gt;splash_bg_newyear.jpg&lt;/code&gt;和&lt;code&gt;splash_horse_newyear.png&lt;/code&gt;这两张图片放到“drawable-hdpi”目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.修改布局“activity_splash.xml”，加入上面两张图片，并改为进入的Activity，去掉顶部的标题栏。&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;activity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	android:name=&amp;quot;com.itheima.zhbj52.SplashActivity&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	android:label=&amp;quot;@string/app_name&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	android:theme=&amp;quot;@android:style/Theme.Black.NoTitleBar.Fullscreen&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;intent-filter&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;action android:name=&amp;quot;android.intent.action.MAIN&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;lt;category android:name=&amp;quot;android.intent.category.LAUNCHER&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;/intent-filter&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/activity&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5.修改“SplashActivity”的代码，添加图片的动画的代码&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class SplashActivity extends Activity &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	RelativeLayout rlRoot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	protected void onCreate(Bundle savedInstanceState) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		super.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		setContentView(R.layout.activity_splash);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		rlRoot = (RelativeLayout) findViewById(R.id.rl_root);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		startAnim();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		//LibUtils.doSomething();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		//rlRoot.setBackgroundResource(R.drawable.newscenter_press);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 开启动画&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private void startAnim() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 动画集合&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		AnimationSet set = new AnimationSet(false);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 旋转动画&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		RotateAnimation rotate = new RotateAnimation(0, 360,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				0.5f);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		rotate.setDuration(1000);// 动画时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		rotate.setFillAfter(true);// 保持动画状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 缩放动画&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ScaleAnimation scale = new ScaleAnimation(0, 1, 0, 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				0.5f);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		scale.setDuration(1000);// 动画时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		scale.setFillAfter(true);// 保持动画状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 渐变动画&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		AlphaAnimation alpha = new AlphaAnimation(0, 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		alpha.setDuration(2000);// 动画时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		alpha.setFillAfter(true);// 保持动画状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		set.addAnimation(rotate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		set.addAnimation(scale);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		set.addAnimation(alpha);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 设置动画监听&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		set.setAnimationListener(new AnimationListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			public void onAnimationStart(Animation animation) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			public void onAnimationRepeat(Animation animation) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// 动画执行结束&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			public void onAnimationEnd(Animation animation) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		rlRoot.startAnimation(set);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;五、引导页-amp-引导页按钮&quot;&gt;&lt;a href=&quot;#五、引导页-amp-引导页按钮&quot; class=&quot;headerlink&quot; title=&quot;五、引导页 &amp;amp; 引导页按钮&quot;&gt;&lt;/a&gt;五、引导页 &amp;amp; 引导页按钮&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;先观察现有的“智慧北京”项目的引导页：&lt;br&gt;整个引导页大的架构是ViewPager，小圆点是LinearLayout。&lt;br&gt;加一个GuideActivity，布局为RelativeLayout。&lt;br&gt;所以，我们需要引入Support v4包，用来使用ViewPager。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.新增一个“GuideActivity”类，并在”AndroidManifest.xml”加上它的标签。&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class GuideActivity extends Activity &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private static final int[] mImageIds = new int[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    R.drawable.guide_1,R.drawable.guide_2, R.drawable.guide_3 &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private ViewPager vpGuide;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private ArrayList&amp;lt;ImageView&amp;gt; mImageViewList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	protected void onCreate(Bundle savedInstanceState) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		super.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		requestWindowFeature(Window.FEATURE_NO_TITLE);// 去掉标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		setContentView(R.layout.activity_guide);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		vpGuide = (ViewPager) findViewById(R.id.vp_guide);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		initViews();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		vpGuide.setAdapter(new GuideAdapter());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		vpGuide.setOnPageChangeListener(new GuidePageListener());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 初始化界面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private void initViews() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		mImageViewList = new ArrayList&amp;lt;ImageView&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 初始化引导页的3个页面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		for (int i = 0; i &amp;lt; mImageIds.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			ImageView image = new ImageView(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			image.setBackgroundResource(mImageIds[i]);// 设置引导页背景&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			mImageViewList.add(image);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * ViewPager数据适配器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * @author Kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	class GuideAdapter extends PagerAdapter &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public int getCount() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			return mImageIds.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public boolean isViewFromObject(View arg0, Object arg1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			return arg0 == arg1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public Object instantiateItem(ViewGroup container, int position) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			container.addView(mImageViewList.get(position));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			return mImageViewList.get(position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public void destroyItem(ViewGroup container, int position, Object object) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			container.removeView((View) object);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;回顾一下上面的代码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先在onCreate()方法中拿到ViewPager&lt;/li&gt;
&lt;li&gt;然后新建一个initViews()方法初始化三个引导页，准备好里面每个ImageView&lt;/li&gt;
&lt;li&gt;给ViewPager去setAdapter，补完其中的getCount()、instantiateItem()、destroyItem()等方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2.为闪屏页加上跳转的效果&lt;/strong&gt;&lt;br&gt;在SplashActivity的&lt;code&gt;set.setAnimationListener(new AnimationListener() {...&lt;/code&gt;代码块中修改如下代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;	@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public void onAnimationEnd(Animation animation) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		//跳转到新手引导页&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              startActivity(new Intent(SplashActivity.this,GuideActivity.class));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              finish();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.为“开始体验”按钮加上“选择器”效果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;往“drawable-hdpi”目录添加两张9-path图，&lt;br&gt;&lt;code&gt;button_red_pressed.9.png&lt;/code&gt;和&lt;code&gt;button_red_normal.9.png&lt;/code&gt;，&lt;br&gt;然后新建“res/drawable”目录，添加两个“选择器”文件：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;btn_guide_selector.xml&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;selector xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;item android:drawable=&amp;quot;@drawable/button_red_pressed&amp;quot; android:state_pressed=&amp;quot;true&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;item android:drawable=&amp;quot;@drawable/button_red_normal&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/selector&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;btn_guide_text_selector.xml&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;selector xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;item android:state_pressed=&amp;quot;true&amp;quot; android:color=&amp;quot;@android:color/black&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;item android:color=&amp;quot;@android:color/white&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/selector&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.修改”activity_splash.xml”&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;RelativeLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_width=&amp;quot;match_parent&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:layout_height=&amp;quot;match_parent&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;android.support.v4.view.ViewPager&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:id=&amp;quot;@+id/vp_guide&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_width=&amp;quot;match_parent&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_height=&amp;quot;match_parent&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Button&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:id=&amp;quot;@+id/btn_start&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_width=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_height=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_alignParentBottom=&amp;quot;true&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_centerHorizontal=&amp;quot;true&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_marginBottom=&amp;quot;60dp&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:background=&amp;quot;@drawable/btn_guide_selector&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:padding=&amp;quot;5dp&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:text=&amp;quot;开始体验&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:visibility=&amp;quot;invisible&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:textColor=&amp;quot;@drawable/btn_guide_text_selector&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/RelativeLayout&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;六、添加引导页小圆点&quot;&gt;&lt;a href=&quot;#六、添加引导页小圆点&quot; class=&quot;headerlink&quot; title=&quot;六、添加引导页小圆点&quot;&gt;&lt;/a&gt;六、添加引导页小圆点&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;分析“小圆点”，是红色的移动小圆点盖住了灰色的三个固定小圆点。&lt;br&gt;先来实现三个灰色的固定的小圆点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;1.用shape实现三个灰色固定小圆点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;之前提过用RelativeLayout来实现这三个小圆点，&lt;br&gt;但还要考虑以后的扩展，例如如果不止三个引导页，&lt;br&gt;可能会有四个、五个的情况，所以不能直接在布局文件中加三个点就算了。&lt;br&gt;所以，我们这些小灰点应该是根据代码实际情况，动态生成的。&lt;br&gt;这里是把这些灰色小圆点放到LinearLayout里面。&lt;/p&gt;
&lt;p&gt;新建一个“shape_point_gray.xml”文件：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;shape xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:shape=&amp;quot;oval&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;solid android:color=&amp;quot;@android:color/darker_gray&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/shape&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;2.在“activity_guide.xml”中加上小灰点的LinearLayout&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           android:id=&amp;quot;@+id/ll_point_group&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           android:layout_width=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           android:layout_height=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           android:orientation=&amp;quot;horizontal&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;位置是在“开始体验”按钮的下方。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.在GuideActivity中添加动态生成灰色小圆点的代码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在GuideActivity中定义引导圆点的父控件变量llPointGroup&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private LinearLayout llPointGroup;// 引导圆点的父控件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在onCreate()方法中给llPointGroup findViewById&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;llPointGroup = (LinearLayout) findViewById(R.id.ll_point_group);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在initViews()方法中初始化引导页的小圆点&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 初始化引导页的小圆点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		for (int i = 0; i &amp;lt; mImageIds.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			View point = new View(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // 设置引导页默认圆点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			point.setBackgroundResource(R.drawable.shape_point_gray);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					10, 10);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if (i &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				params.leftMargin = 10;// 设置圆点间隔&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			point.setLayoutParams(params);// 设置圆点的大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			llPointGroup.addView(point);// 将圆点添加给线性布局&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意里面的判断，是为了从第二个点开始设置marginLeft的圆点间隔。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.加上小红点&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;shape xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android:shape=&amp;quot;oval&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;solid android:color=&amp;quot;#f00&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/shape&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改“activity_guide.xml”的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;RelativeLayout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       android:layout_width=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       android:layout_height=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       android:layout_alignParentBottom=&amp;quot;true&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       android:layout_centerHorizontal=&amp;quot;true&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       android:layout_marginBottom=&amp;quot;20dp&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           android:id=&amp;quot;@+id/ll_point_group&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           android:layout_width=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           android:layout_height=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           android:orientation=&amp;quot;horizontal&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;View&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           android:id=&amp;quot;@+id/view_red_point&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           android:layout_width=&amp;quot;10dp&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           android:layout_height=&amp;quot;10dp&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           android:background=&amp;quot;@drawable/shape_point_red&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/RelativeLayout&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;位置也是在“开始体验”按钮的下方。&lt;/p&gt;
&lt;p&gt;那么到目前位置，效果应该是有三个灰色小圆点，&lt;br&gt;而红色小圆点是压着第一个灰色小圆点的。&lt;/p&gt;
&lt;h2 id=&quot;七、圆点位置跟随手指移动&quot;&gt;&lt;a href=&quot;#七、圆点位置跟随手指移动&quot; class=&quot;headerlink&quot; title=&quot;七、圆点位置跟随手指移动&quot;&gt;&lt;/a&gt;七、圆点位置跟随手指移动&lt;/h2&gt;&lt;p&gt;上面的代码可能产生一个问题，小红点跟小灰点的大小不一致，&lt;br&gt;这是因为小红点单位是dp，而小灰点单位是px像素，&lt;br&gt;解决的方法会在之后屏幕适配的教程中进行讲解。&lt;/p&gt;
&lt;h2 id=&quot;八、新手引导只展示一次&quot;&gt;&lt;a href=&quot;#八、新手引导只展示一次&quot; class=&quot;headerlink&quot; title=&quot;八、新手引导只展示一次&quot;&gt;&lt;/a&gt;八、新手引导只展示一次&lt;/h2&gt;&lt;p&gt;&lt;em&gt;上面的“小圆点”其实是有开源框架实现的。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.让“开始体验”的按钮只在最后一个引导页显示。&lt;/strong&gt;&lt;br&gt;修改“开始体验”按钮为“invisible”&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android:visibility=&amp;quot;invisible&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在GuideActivity添加关于“开始体验”按钮的代码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private Button btnStart;// 开始体验&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;btnStart = (Button) findViewById(R.id.btn_start);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		btnStart.setOnClickListener(new OnClickListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			public void onClick(View v) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				// 更新sp, 表示已经展示了新手引导&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				PrefUtils.setBoolean(GuideActivity.this,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						&amp;quot;is_user_guide_showed&amp;quot;, true);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				// 跳转主页面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				startActivity(new Intent(GuideActivity.this, MainActivity.class));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				finish();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后一个页面被选中时，显示“开始体验”按钮&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 某个页面被选中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public void onPageSelected(int position) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if (position == mImageIds.length - 1) &amp;#123;// 最后一个页面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				btnStart.setVisibility(View.VISIBLE);// 显示开始体验的按钮&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				btnStart.setVisibility(View.INVISIBLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.用SharedPreference让引导页只显示一次&lt;/strong&gt;&lt;br&gt;修改SplashActivity类，增加“jumpNextPage()”方法。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//...前面代码省略&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// 动画执行结束&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			public void onAnimationEnd(Animation animation) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				jumpNextPage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		rlRoot.startAnimation(set);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * 跳转下一个页面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private void jumpNextPage() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 判断之前有没有显示过新手引导&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SharedPreferences sp = getSharedPreferences(&amp;quot;config&amp;quot;,MODE_PRIVATE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		boolean userGuide = sp.getBoolean(&amp;quot;is_user_guide_showed&amp;quot;,false);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if (!userGuide) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// 跳转到新手引导页&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			startActivity(new Intent(SplashActivity.this, GuideActivity.class));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			startActivity(new Intent(SplashActivity.this, MainActivity.class));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		finish();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.封装SharedPreferences的用法为工具类&lt;/strong&gt;&lt;br&gt;每次都这样写SharedPreferences太麻烦了，封装成工具类&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package com.itheima.zhbj52.utils;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.content.Context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import android.content.SharedPreferences;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * SharePreference封装&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @author Kevin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class PrefUtils &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public static final String PREF_NAME = &amp;quot;config&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public static boolean getBoolean(Context ctx, String key,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			boolean defaultValue) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		SharedPreferences sp = ctx.getSharedPreferences(PREF_NAME,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				Context.MODE_PRIVATE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return sp.getBoolean(key, defaultValue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	public static void setBoolean(Context ctx, String key, boolean value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		SharedPreferences sp = ctx.getSharedPreferences(PREF_NAME,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				Context.MODE_PRIVATE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		sp.edit().putBoolean(key, value).commit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;九、Library用法-amp-Sliding-Menu简介&quot;&gt;&lt;a href=&quot;#九、Library用法-amp-Sliding-Menu简介&quot; class=&quot;headerlink&quot; title=&quot;九、Library用法 &amp;amp; Sliding Menu简介&quot;&gt;&lt;/a&gt;九、Library用法 &amp;amp; Sliding Menu简介&lt;/h2&gt;&lt;p&gt;最火的Android开源项目&lt;br&gt;&lt;a href=&quot;http://www.csdn.net/article/2013-05-03/2815127-Android-open-source-projects&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.csdn.net/article/2013-05-03/2815127-Android-open-source-projects&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;去Github把SlidingMenu的zip包下载下来，并解压。&lt;/p&gt;
&lt;p&gt;视频中添加依赖的方法是Eclipse的，&lt;br&gt;跟AndroidStudio不一样，这里省略。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;“智慧北京”第一天-笔记&quot;&gt;&lt;a href=&quot;#“智慧北京”第一天-笔记&quot; class=&quot;headerlink&quot; title=&quot;“智慧北京”第一天 笔记&quot;&gt;&lt;/a&gt;“智慧北京”第一天 笔记&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;一、项目介绍&quot;&gt;&lt;a h
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://linww.in/2016/04/22/hello-world/"/>
    <id>http://linww.in/2016/04/22/hello-world/</id>
    <published>2016-04-22T15:13:25.181Z</published>
    <updated>2016-04-22T15:13:25.181Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
