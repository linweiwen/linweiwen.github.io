<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Linww | 第三人称</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://linww.in/"/>
  <updated>2016-05-22T11:40:14.450Z</updated>
  <id>http://linww.in/</id>
  
  <author>
    <name>Linww</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>测试</title>
    <link href="http://linww.in/2016/05/22/%E6%B5%8B%E8%AF%95/"/>
    <id>http://linww.in/2016/05/22/测试/</id>
    <published>2016-05-21T16:00:00.000Z</published>
    <updated>2016-05-22T11:40:14.450Z</updated>
    
    <content type="html">&lt;p&gt;如果你使用过 Sass 3.3 之前的版本，那么你一定对那段时光颇有感触，那时候没有现如今这么好的条件，那时候的 Map 还只能用多重列表（lists of list）来模拟。多重列表可以实现复杂数据的嵌套定义，但却不是以键值对的形式实现的，所有当我们需要获取其中特定的某一项时就会比较麻烦。Map 这种数据类型天生就是基于键值对的形式，非常便于组织数据。&lt;/p&gt;
&lt;p&gt;自从可以使用 Map 之后，开发者们开始毫无顾忌地定义 Map 存储数据，比如断点宽度、颜色值、栅格布局等等响应式排版的细节，都被一股脑的塞进了 Map 中。&lt;/p&gt;
&lt;p&gt;那么，有了 Map 之后，我们还有必要使用 List 吗？可能某些人会觉得为了保持向后兼容应该继续使用多重列表模拟 Map，因为可能有些开发者仍然在使用老版本的 Sass 编译器，但实际上，这是多此一举了，Sass 的版本通常由 &lt;code&gt;package.json&lt;/code&gt; 或者其他同类型的项目配置文件所控制，往往只需一条命令（&lt;code&gt;gem update sass&lt;/code&gt;）即可更新 Sass 的版本，因此基本上无需考虑对老版本的兼容问题。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;使用多重列表替代 Map 的优势之一就是减少代码量。下面让我们来比较一下多种列表和 Map 的语法结构以及遍历方式。&lt;/p&gt;
&lt;h2 id=&quot;测试表格&quot;&gt;&lt;a href=&quot;#测试表格&quot; class=&quot;headerlink&quot; title=&quot;测试表格&quot;&gt;&lt;/a&gt;测试表格&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;site&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Sitewide information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;page&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Page specific information and custom variables set in front-matter.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;config&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Site configuration&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;theme&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Theme configuration. Inherits from site configuration.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;_&lt;/code&gt; (single underscore)&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://lodash.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Lodash&lt;/a&gt; library&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;path&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Path of current page&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;url&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Full URL of current page&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;env&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Environment variables&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;语法比较&quot;&gt;&lt;a href=&quot;#语法比较&quot; class=&quot;headerlink&quot; title=&quot;语法比较&quot;&gt;&lt;/a&gt;语法比较&lt;/h2&gt;&lt;div class=&quot;note&quot;&gt;&lt;br&gt;    &lt;h5&gt;测试标题&lt;/h5&gt;&lt;br&gt;    &lt;p&gt;在下面的示例中，我创建了一个用于控制响应式布局的数据，该数据一共有四个断点，每一个断点都包含了 &lt;code&gt;min-width&lt;/code&gt;、&lt;code&gt;max-width&lt;/code&gt;、&lt;code&gt;font-size&lt;/code&gt; 和 &lt;code&gt;line-height&lt;/code&gt; 四个样式。&lt;/p&gt;&lt;br&gt;&lt;/div&gt;

&lt;h4 id=&quot;Map-语法&quot;&gt;&lt;a href=&quot;#Map-语法&quot; class=&quot;headerlink&quot; title=&quot;Map 语法&quot;&gt;&lt;/a&gt;Map 语法&lt;/h4&gt;&lt;p&gt;下面就是使用 Map 存储的数据，具体来说，该 Map 中首先存储了四个用于标识断点的 Key，相对应的是保存具体属性值得 Value。虽然这种形式可读性更高，但是总体代码量却高达 26 行 450 个字符。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$breakpoint-map: (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    small: (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        min-width: null,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        max-width: 479px,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        base-font: 16px,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vertical-rhythm: 1.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    medium: (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        min-width: 480px,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        max-width: 959px,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        base-font: 18px,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vertical-rhythm: 1.414&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    large: (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        min-width: 960px,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        max-width: 1099px,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        base-font: 18px,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vertical-rhythm: 1.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    xlarge: (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        min-width: 1100px,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        max-width: null,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        base-font: 21px,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        vertical-rhythm: 1.618&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;多重列表语法&quot;&gt;&lt;a href=&quot;#多重列表语法&quot; class=&quot;headerlink&quot; title=&quot;多重列表语法&quot;&gt;&lt;/a&gt;多重列表语法&lt;/h4&gt;&lt;p&gt;下面的多重列表存储了和上面 Map 同样的数据，在多重列表中没有 Key-Value 的对应关系，这意味着要想找到特定的值，必须使用遍历或 &lt;code&gt;nth()&lt;/code&gt; 的方式来实现了。从另一个角度来看，多种列表又比 Map 的代码量小得多，总共只有六行 180 个字符。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$breakpoint-list: (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (small, null, 479px, 16px, 1.3),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (medium, 480px, 959px, 18px, 1.414),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (large, 960px, 1099px, 18px, 1.5),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (xlarge, 1100px, null, 21px, 1.618)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;遍历比较&quot;&gt;&lt;a href=&quot;#遍历比较&quot; class=&quot;headerlink&quot; title=&quot;遍历比较&quot;&gt;&lt;/a&gt;遍历比较&lt;/h2&gt;&lt;div class=&quot;note info&quot;&gt;&lt;br&gt;    &lt;h5&gt;测试标题&lt;/h5&gt;&lt;br&gt;    &lt;p&gt;从上面简单地比较中可以粗略的看出，多种列表的代码量明显少于 Map。但是，如果我们需要遍历这些值得话，复杂度又是怎样的呢？&lt;/p&gt;&lt;br&gt;&lt;/div&gt;

&lt;h4 id=&quot;遍历-Map&quot;&gt;&lt;a href=&quot;#遍历-Map&quot; class=&quot;headerlink&quot; title=&quot;遍历 Map&quot;&gt;&lt;/a&gt;遍历 Map&lt;/h4&gt;&lt;p&gt;我们可以使用如下的代码遍历 Map：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@each $label, $map in $breakpoint-map &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里的变量 &lt;code&gt;$label&lt;/code&gt; 和 &lt;code&gt;$map&lt;/code&gt; 会随着对 &lt;code&gt;$breakpoint-map&lt;/code&gt; 的遍历被动态地赋值，&lt;code&gt;$label&lt;/code&gt; 将会被赋值为 &lt;code&gt;$breakpoint-map&lt;/code&gt; 的 Key，而 &lt;code&gt;$map&lt;/code&gt; 会被赋值为 &lt;code&gt;$breakpoint-map&lt;/code&gt; 的 Value。为了在遍历过程中获取特定值，我们就需要使用 Sass 原生的 &lt;code&gt;map-get()&lt;/code&gt; 函数，使用该函数需要传入两个参数：Map 的名字和求取的 Key，最后返回该 Map 中匹配该 Key 的 Value。&lt;/p&gt;
&lt;p&gt;具体的做法就是使用 &lt;code&gt;@each&lt;/code&gt; 遍历 Map，然后使用 &lt;code&gt;map-get()&lt;/code&gt; 获取特定值，最终只需要六行代码 220 个字符即可完成整个遍历：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@each $label, $map in $breakpoint-map &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $min-width: map-get($map, min-width);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $max-width: map-get($map, max-width);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $base-font: map-get($map, base-font);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $vertical-rhythm: map-get($map, vertical-rhythm);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;遍历多重列表&quot;&gt;&lt;a href=&quot;#遍历多重列表&quot; class=&quot;headerlink&quot; title=&quot;遍历多重列表&quot;&gt;&lt;/a&gt;遍历多重列表&lt;/h4&gt;&lt;p&gt;遍历多重列表不必像遍历 Map 一样动态获取到 Map 后再使用 &lt;code&gt;map-get()&lt;/code&gt; 函数取特定值，直接遍历一遍即可获得特定值。&lt;/p&gt;
&lt;p&gt;因为多种列表内层的每一个列表结构相同，都有按照相同顺序排列的五个值，所以我们可以持续遍历每个值并赋值给特定的变量。无需调用 &lt;code&gt;map-get()&lt;/code&gt;，直接引用这些变量即可进行赋值等裸机操作。最终遍历多重列表只使用了两行代码 100 个字符：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@each $label, $min-width, $max-width, $base-font, $vertical-rhythm in $breakpoint-list &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;慎用多重列表&quot;&gt;&lt;a href=&quot;#慎用多重列表&quot; class=&quot;headerlink&quot; title=&quot;慎用多重列表&quot;&gt;&lt;/a&gt;慎用多重列表&lt;/h2&gt;&lt;div class=&quot;note warning&quot;&gt;&lt;br&gt;    &lt;h5&gt;测试标题&lt;/h5&gt;&lt;br&gt;    &lt;p&gt;经过上述的比对，看起来多重列表各方面都在碾压 Map，实则不然，Sass 中添加 Map 有一条非常重要的原因就是：Key-Value 的映射关系。&lt;/p&gt;&lt;br&gt;&lt;/div&gt;

&lt;h4 id=&quot;遗漏键值&quot;&gt;&lt;a href=&quot;#遗漏键值&quot; class=&quot;headerlink&quot; title=&quot;遗漏键值&quot;&gt;&lt;/a&gt;遗漏键值&lt;/h4&gt;&lt;p&gt;如果要使用多重列表，那么就必须保证自己非常熟悉多重列表内部的每一项所代表的意义。下面我们举个例子，来看看遗漏了某些值的情况：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$breakpoint-list: (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (small, null, 479px, 16px, 1.3),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (medium, 480px, 959px, 18px, 1.414),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (large, 960px, 1099px, 18px, 1.5),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (xlarge, 1100px, 21px, 1.618)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @each $label, $min-width, $max-width, $base-font, $vertical-rhythm in $breakpoint-list &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        @if $min-width &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            @include breakpoint( $min-width ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                font-size: $base-font;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                line-height: $vertical-rhythm;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; @else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            font-size: $base-font;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            line-height: $vertical-rhythm;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当我们尝试运行这段代码时，结果肯定是错误地，因为在 &lt;code&gt;$breakpoint-list&lt;/code&gt; 的最后一行，&lt;code&gt;xlarge&lt;/code&gt; 被赋值给了 &lt;code&gt;$label&lt;/code&gt;，&lt;code&gt;1100px&lt;/code&gt; 被赋值给了 &lt;code&gt;$min-width&lt;/code&gt;，&lt;code&gt;21px&lt;/code&gt; 被赋值给了 &lt;code&gt;$max-width&lt;/code&gt;, &lt;code&gt;1.618&lt;/code&gt; 被赋值给了 &lt;code&gt;$base-font&lt;/code&gt;，最终导致 &lt;code&gt;$vertical-rhythm&lt;/code&gt; 没有被赋值，结果就是 &lt;code&gt;font-size&lt;/code&gt; 的属性值是错的，&lt;code&gt;line-height&lt;/code&gt; 的属性值是空的。此外，Sass 还不会对此抛出错误，导致我们无从知晓错误所在。&lt;/p&gt;
&lt;p&gt;如果我们使用 Map 来代替这里的多重列表，那么使用 &lt;code&gt;map-get()&lt;/code&gt; 函数即使遇见空值也能正确获得想要的结果。这就是值得我们慎重思考的地方：多种列表虽然简单快速，但是丧失了 Map 中的容错能力和快速取值能力。&lt;/p&gt;
&lt;h4 id=&quot;查找特定列表&quot;&gt;&lt;a href=&quot;#查找特定列表&quot; class=&quot;headerlink&quot; title=&quot;查找特定列表&quot;&gt;&lt;/a&gt;查找特定列表&lt;/h4&gt;&lt;p&gt;在多重列表中查找特定列表简直就是一种折磨。如果使用 Map，那么配合 &lt;code&gt;map-get()&lt;/code&gt; 函数可以快速定位到特定子 Map：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$medium-map: map-get($maps, medium);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但如果要获取多种列表 &lt;code&gt;medium&lt;/code&gt; 列表，麻烦可就大了：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@function get-list($label) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @each $list in $breakpoint-list &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        @if nth($list, 1) == $label &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            @return $list;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @return null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$medium-list: get-list(medium);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码的逻辑就是遍历整个多重列表，知道找到第一个匹配项，然后返回，如果一直没有找到匹配项，就一直遍历到末尾，然后返回 &lt;code&gt;null&lt;/code&gt;。这实际上就是手工实现了 &lt;code&gt;map-get()&lt;/code&gt; 的逻辑。&lt;/p&gt;
&lt;h4 id=&quot;缺少原生的-Map-函数&quot;&gt;&lt;a href=&quot;#缺少原生的-Map-函数&quot; class=&quot;headerlink&quot; title=&quot;缺少原生的 Map 函数&quot;&gt;&lt;/a&gt;缺少原生的 Map 函数&lt;/h4&gt;&lt;p&gt;Sass 提供了诸多的原生函数用于处理 Map 数据类型，但是多重列表是没法调用这些函数的，比如，使用 &lt;code&gt;map-merge()&lt;/code&gt; 可以合并两个 Map，如果两个 Map 有相同的值，则取第二个 Map 的值为最终值。当然你也可以在多重列表中使用 &lt;code&gt;join()&lt;/code&gt; 或 &lt;code&gt;append()&lt;/code&gt; 来增加新列表，从而模拟出 &lt;code&gt;map-merge()&lt;/code&gt; 的效果。&lt;/p&gt;
&lt;p&gt;另一个实用的 Map 函数就是 &lt;code&gt;map-has-key()&lt;/code&gt;，对于依赖 &lt;code&gt;map-get()&lt;/code&gt; 的自定义函数来说，&lt;code&gt;map-has-key()&lt;/code&gt; 可以用来验证特定的 Key 是否存在。但在列表中是完全没有相似的方法。&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;div class=&quot;note unreleased&quot;&gt;&lt;br&gt;    &lt;h5&gt;Test Title&lt;/h5&gt;&lt;br&gt;    &lt;p&gt;相比起列表来说，Key-Value 模型的 Map 显然更有力量，原生的 Sass Map 函数更是提供了强力的数据查找和验证工具。&lt;/p&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;虽然多重列表代码量少，但并不能像 Map 一样进行错误检查或验证参数。在大多数时候，相比较多重列表而言，我相信 Map 是更好的选择。如果是为了更少的代码量和其他简单地调用，那么我偶尔会用用多重列表，但是从项目的宏观控制和数据存储方面显然更优秀。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;如果你使用过 Sass 3.3 之前的版本，那么你一定对那段时光颇有感触，那时候没有现如今这么好的条件，那时候的 Map 还只能用多重列表（lists of list）来模拟。多重列表可以实现复杂数据的嵌套定义，但却不是以键值对的形式实现的，所有当我们需要获取其中特定的某一项时就会比较麻烦。Map 这种数据类型天生就是基于键值对的形式，非常便于组织数据。&lt;/p&gt;
&lt;p&gt;自从可以使用 Map 之后，开发者们开始毫无顾忌地定义 Map 存储数据，比如断点宽度、颜色值、栅格布局等等响应式排版的细节，都被一股脑的塞进了 Map 中。&lt;/p&gt;
&lt;p&gt;那么，有了 Map 之后，我们还有必要使用 List 吗？可能某些人会觉得为了保持向后兼容应该继续使用多重列表模拟 Map，因为可能有些开发者仍然在使用老版本的 Sass 编译器，但实际上，这是多此一举了，Sass 的版本通常由 &lt;code&gt;package.json&lt;/code&gt; 或者其他同类型的项目配置文件所控制，往往只需一条命令（&lt;code&gt;gem update sass&lt;/code&gt;）即可更新 Sass 的版本，因此基本上无需考虑对老版本的兼容问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="test" scheme="http://linww.in/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>CodePath目录</title>
    <link href="http://linww.in/2015/10/21/CodePath%E7%9B%AE%E5%BD%95/"/>
    <id>http://linww.in/2015/10/21/CodePath目录/</id>
    <published>2015-10-21T02:34:12.000Z</published>
    <updated>2016-06-24T16:22:08.806Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Getting-Started&quot;&gt;&lt;a href=&quot;#Getting-Started&quot; class=&quot;headerlink&quot; title=&quot;Getting Started&quot;&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;&lt;h3 id=&quot;Totally-new-to-Android-Start-here&quot;&gt;&lt;a href=&quot;#Totally-new-to-Android-Start-here&quot; class=&quot;headerlink&quot; title=&quot;Totally new to Android? Start here.&quot;&gt;&lt;/a&gt;Totally new to Android? Start here.&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Getting Started as a Developer (New to programming?)&lt;/li&gt;
&lt;li&gt;Getting Started with Android (Detailed Post With Many Links)&lt;/li&gt;
&lt;li&gt;Setting up Android Studio (Installation Slides) or Setting up IntelliJ IDEA&lt;/li&gt;
&lt;li&gt;Installing a Faster Emulator (Genymotion Guide)&lt;/li&gt;
&lt;li&gt;Architecture of Mobile Apps (Concept Slides)&lt;/li&gt;
&lt;li&gt;Mobile Screen Archetypes (Common mobile app screen categories)&lt;/li&gt;
&lt;li&gt;Troubleshooting Common Issues (Running into problems?)&lt;/li&gt;
&lt;li&gt;Developing our First App Using Android Studio (Step-by-Step Todo App)&lt;/li&gt;
&lt;li&gt;Todo App Guide (Todo App steps in guide format)&lt;/li&gt;
&lt;li&gt;Sample Android Apps (Code repositories)&lt;/li&gt;
&lt;li&gt;Free Android Curriculum (Additional resources)&lt;/li&gt;
&lt;li&gt;Google Android Glossary (Defining Common Terms)&lt;/li&gt;
&lt;li&gt;Android Learning Resources&lt;/li&gt;
&lt;li&gt;Keeping Updated with Android (Podcasts, blogs, newsletters)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Using-Eclipse-See-below&quot;&gt;&lt;a href=&quot;#Using-Eclipse-See-below&quot; class=&quot;headerlink&quot; title=&quot;Using Eclipse? See below.&quot;&gt;&lt;/a&gt;Using Eclipse? See below.&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Setting up Eclipse ADT (Detailed Slides)&lt;/li&gt;
&lt;li&gt;Developing our First App Using Eclipse ADT (Step-by-Step Todo App)&lt;/li&gt;
&lt;li&gt;Troubleshooting Eclipse Issues (Running into eclipse problems?)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Structure&quot;&gt;&lt;a href=&quot;#Structure&quot; class=&quot;headerlink&quot; title=&quot;Structure&quot;&gt;&lt;/a&gt;Structure&lt;/h2&gt;&lt;h3 id=&quot;Exploring-the-foundations-of-app-development&quot;&gt;&lt;a href=&quot;#Exploring-the-foundations-of-app-development&quot; class=&quot;headerlink&quot; title=&quot;Exploring the foundations of app development:&quot;&gt;&lt;/a&gt;Exploring the foundations of app development:&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Using Context (What is context and how is it used?)&lt;/li&gt;
&lt;li&gt;Android Directory Structure (Files and Folders for Android apps)&lt;/li&gt;
&lt;li&gt;Organizing your Source Files (Cleaning up source of your apps)&lt;/li&gt;
&lt;li&gt;Architecture of Android Apps (Understanding how apps should be structured)&lt;/li&gt;
&lt;li&gt;Understanding App Resources (Understanding Strings and Resources)&lt;/li&gt;
&lt;li&gt;Understanding the Activity Lifecycle (How does an activity work?)&lt;/li&gt;
&lt;li&gt;Handling Configuration Changes (Screen Rotation)&lt;/li&gt;
&lt;li&gt;Migrating to the AppCompat Library (Using the Support Libraries)&lt;/li&gt;
&lt;li&gt;App Permissions (How to request the permissions you need)&lt;/li&gt;
&lt;li&gt;Managing Runtime Permissions with PermissionsDispatcher&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Views-and-Layouts&quot;&gt;&lt;a href=&quot;#Views-and-Layouts&quot; class=&quot;headerlink&quot; title=&quot;Views and Layouts&quot;&gt;&lt;/a&gt;Views and Layouts&lt;/h2&gt;&lt;h3 id=&quot;Exploring-the-gritty-details-of-views-layout-styling-and-common-UI-patterns&quot;&gt;&lt;a href=&quot;#Exploring-the-gritty-details-of-views-layout-styling-and-common-UI-patterns&quot; class=&quot;headerlink&quot; title=&quot;Exploring the gritty details of views, layout, styling and common UI patterns:&quot;&gt;&lt;/a&gt;Exploring the gritty details of views, layout, styling and common UI patterns:&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Constructing View Layouts (How to layout views)&lt;/li&gt;
&lt;li&gt;Defining Views and their Attributes (Gravity, Margin, Padding, etc)&lt;/li&gt;
&lt;li&gt;Working with the TextView (Properties, Drawables, Custom Fonts)&lt;/li&gt;
&lt;li&gt;Working with the EditText (Properties)&lt;/li&gt;
&lt;li&gt;Working with the ImageView (Drawables, Size and Scale, Density, Raw Bitmaps)&lt;/li&gt;
&lt;li&gt;Working with Input Views (Spinner, RatingBar, etc)&lt;/li&gt;
&lt;li&gt;Working with the Soft Keyboard&lt;/li&gt;
&lt;li&gt;Working with the WebView&lt;/li&gt;
&lt;li&gt;Working with the ScrollView&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Designing-and-Styling-Views&quot;&gt;&lt;a href=&quot;#Designing-and-Styling-Views&quot; class=&quot;headerlink&quot; title=&quot;Designing and Styling Views&quot;&gt;&lt;/a&gt;Designing and Styling Views&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Drawables (and how to polish UI views)&lt;/li&gt;
&lt;li&gt;Styles and Themes (Consolidating view styles)&lt;/li&gt;
&lt;li&gt;Animations (Animating views, layouts, activities and more)&lt;/li&gt;
&lt;li&gt;Polishing a UI Tips and Tools (Links to key resources)&lt;/li&gt;
&lt;li&gt;Android Design Guidelines (Overview of Android design standards)&lt;/li&gt;
&lt;li&gt;Styling UI Screens FAQ (Answers to common questions around building screens)&lt;/li&gt;
&lt;li&gt;Cloning a Login Screen Layout Guide (Creating attractive UIs, Q&amp;amp;A)&lt;/li&gt;
&lt;li&gt;Developing Custom Themes (Integrating drawables, styles and themes)&lt;/li&gt;
&lt;li&gt;Material Design Primer (Lollipop Design Overview)&lt;/li&gt;
&lt;li&gt;Dynamic Color using Palettes (Adaptive colors, Android 5.0)&lt;/li&gt;
&lt;li&gt;Ripple Animation (Android 5.0)&lt;/li&gt;
&lt;li&gt;Shared Element Activity Transition (Android 5.0)&lt;/li&gt;
&lt;li&gt;Circular Reveal Animation (Android 5.0)&lt;/li&gt;
&lt;li&gt;Design Support Library (Material Design Library)&lt;/li&gt;
&lt;li&gt;Chrome Custom Tabs&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;AdapterViews&quot;&gt;&lt;a href=&quot;#AdapterViews&quot; class=&quot;headerlink&quot; title=&quot;AdapterViews&quot;&gt;&lt;/a&gt;AdapterViews&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Using an ArrayAdapter with ListView (with custom list items)&lt;/li&gt;
&lt;li&gt;Endless Scrolling with AdapterViews and RecyclerView (Infinite pagination)&lt;/li&gt;
&lt;li&gt;Implementing Pull to Refresh Guide&lt;/li&gt;
&lt;li&gt;Implementing a Horizontal ListView Guide (Scrolls horizontally)&lt;/li&gt;
&lt;li&gt;Implementing a Heterogenous ListView (with different item types)&lt;/li&gt;
&lt;li&gt;Using the RecyclerView (Android 5.0)&lt;/li&gt;
&lt;li&gt;Heterogenous Layouts inside RecyclerView (Android 5.0)&lt;/li&gt;
&lt;li&gt;Using the CardView (Android 5.0)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Custom-Views&quot;&gt;&lt;a href=&quot;#Custom-Views&quot; class=&quot;headerlink&quot; title=&quot;Custom Views&quot;&gt;&lt;/a&gt;Custom Views&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Basic Painting with Views (Simple drawing app tutorial)&lt;/li&gt;
&lt;li&gt;Defining Custom Views (Needs Attention)&lt;/li&gt;
&lt;li&gt;Extending SurfaceView (Needs Attention)&lt;/li&gt;
&lt;li&gt;Drawing with OpenGL and GLSurfaceView (Needs Attention)&lt;/li&gt;
&lt;li&gt;Building a Custom Animated Progress Bar (Exercise)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Interaction&quot;&gt;&lt;a href=&quot;#Interaction&quot; class=&quot;headerlink&quot; title=&quot;Interaction&quot;&gt;&lt;/a&gt;Interaction&lt;/h2&gt;&lt;p&gt;Exploring how to allow user interaction and navigation within an app:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;View Event Listeners (Clicks, Key Presses, Updates)&lt;/li&gt;
&lt;li&gt;Creating Custom Listeners (Defining, setting and triggering events)&lt;/li&gt;
&lt;li&gt;Displaying Toasts (Quick notices and includes custom views)&lt;/li&gt;
&lt;li&gt;Displaying the Snackbar (Quick notices with actions)&lt;/li&gt;
&lt;li&gt;Exploring the ActionBar (Includes adding ActionItems)&lt;/li&gt;
&lt;li&gt;Extended ActionBar Guide (Split-bar, Custom ActionBar, etc)&lt;/li&gt;
&lt;li&gt;Gestures and Touch Events (Swipe, Shake, or Dragging Events)&lt;/li&gt;
&lt;li&gt;Menus and Popups (Context Menu, PopupMenu, PopupWindow)&lt;/li&gt;
&lt;li&gt;Dialogs with DialogFragment (Displaying a content overlay)&lt;/li&gt;
&lt;li&gt;Implementing a Rate Me Feature (For getting Play Store ratings)&lt;/li&gt;
&lt;li&gt;Repeating Periodic Tasks (Handler, ScheduledThreadPoolExecutor)&lt;/li&gt;
&lt;li&gt;Using the App Toolbar (ActionBar Replacement)&lt;/li&gt;
&lt;li&gt;Floating Action Buttons (Android 5.0, Promoted Action)&lt;/li&gt;
&lt;li&gt;Handling Scrolls with CoordinatorLayout (Collapsing toolbars)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Navigation&quot;&gt;&lt;a href=&quot;#Navigation&quot; class=&quot;headerlink&quot; title=&quot;Navigation&quot;&gt;&lt;/a&gt;Navigation&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Navigating Activities with Intents (Communicating between Activities)&lt;/li&gt;
&lt;li&gt;Common Navigation Paradigms (Tabs, Swipe-able Views, Pull-out Drawer)&lt;/li&gt;
&lt;li&gt;Common Implicit Intents (Making a Call, Sending a Text, Opening a URL)&lt;/li&gt;
&lt;li&gt;Navigation and Task Stacks (Controlling the behavior of the task stack)&lt;/li&gt;
&lt;li&gt;Sharing Content with Intents (and ShareActionProvider)&lt;/li&gt;
&lt;li&gt;Using Parcelable (Pass data fast between activities)&lt;/li&gt;
&lt;li&gt;Book Search Tutorial (Toolbar with SearchView and sharing content)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Networking-and-Models&quot;&gt;&lt;a href=&quot;#Networking-and-Models&quot; class=&quot;headerlink&quot; title=&quot;Networking and Models&quot;&gt;&lt;/a&gt;Networking and Models&lt;/h2&gt;&lt;p&gt;Diving into the networking and model layers for data-driven apps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sending and Managing Network Requests (API Calls, Image Downloading)&lt;/li&gt;
&lt;li&gt;Displaying Images with the Picasso Library (Remote Image Downloading)&lt;/li&gt;
&lt;li&gt;Converting JSON to Models (JSON to Objects Deserialization)&lt;/li&gt;
&lt;li&gt;Leveraging the Gson Library (JSON deserialization library)&lt;/li&gt;
&lt;li&gt;Creating and Executing Async Tasks (Long-running Background Tasks)&lt;/li&gt;
&lt;li&gt;Handling ProgressBars (with Long-Running Tasks)&lt;/li&gt;
&lt;li&gt;Rotten Tomatoes Networking Tutorial&lt;/li&gt;
&lt;li&gt;Networking with the Volley Library&lt;/li&gt;
&lt;li&gt;Displaying Images with the Fresco Library&lt;/li&gt;
&lt;li&gt;Building Data-driven Apps with Parse&lt;/li&gt;
&lt;li&gt;Configuring a Parse Server&lt;/li&gt;
&lt;li&gt;Building Simple Chat Client with Parse&lt;/li&gt;
&lt;li&gt;Troubleshooting Common Issues with Parse&lt;/li&gt;
&lt;li&gt;Consuming APIs with Retrofit&lt;/li&gt;
&lt;li&gt;Sending and Receiving Data with Sockets&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Persistence&quot;&gt;&lt;a href=&quot;#Persistence&quot; class=&quot;headerlink&quot; title=&quot;Persistence&quot;&gt;&lt;/a&gt;Persistence&lt;/h2&gt;&lt;p&gt;Exploring the strategies for data persistence:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Persisting Data to the Device (Preferences, Files, SQLite, ORMs)&lt;/li&gt;
&lt;li&gt;ActiveAndroid ORM Guide (and Q&amp;amp;A)&lt;/li&gt;
&lt;li&gt;Storing and Accessing SharedPreferences&lt;/li&gt;
&lt;li&gt;Local Databases with SQLiteOpenHelper&lt;/li&gt;
&lt;li&gt;Populating a ListView with a CursorAdapter&lt;/li&gt;
&lt;li&gt;Settings with PreferenceFragment&lt;/li&gt;
&lt;li&gt;Loading Contacts with Content Providers (CursorLoader, LoaderManager)&lt;/li&gt;
&lt;li&gt;Interacting with the Calendar (CalendarProvider)&lt;/li&gt;
&lt;li&gt;Creating Content Providers (Needs Attention)&lt;/li&gt;
&lt;li&gt;Clean Persistence with Sugar ORM (Installation, Queries, Migrations)&lt;/li&gt;
&lt;li&gt;DBFlow ORM Guide (Installation, Queries)&lt;/li&gt;
&lt;li&gt;Easier SQL with Cupboard&lt;/li&gt;
&lt;li&gt;Powerful Persistence with JDXA ORM&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Fragments&quot;&gt;&lt;a href=&quot;#Fragments&quot; class=&quot;headerlink&quot; title=&quot;Fragments&quot;&gt;&lt;/a&gt;Fragments&lt;/h2&gt;&lt;p&gt;Understanding how to build powerful and flexible views using Fragments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Creating and Using Fragments&lt;/li&gt;
&lt;li&gt;Displaying a DialogFragment&lt;/li&gt;
&lt;li&gt;Google Play Style Tabs using TabLayout&lt;/li&gt;
&lt;li&gt;Sliding Tabs with PagerSlidingTabStrip&lt;/li&gt;
&lt;li&gt;ViewPager with FragmentPagerAdapter&lt;/li&gt;
&lt;li&gt;Fragment Navigation Drawer&lt;/li&gt;
&lt;li&gt;Flexible User Interfaces (with Fragments)&lt;/li&gt;
&lt;li&gt;ActionBar Tabs with Fragments (Deprecated)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Sensors-and-Device-SDKs&quot;&gt;&lt;a href=&quot;#Sensors-and-Device-SDKs&quot; class=&quot;headerlink&quot; title=&quot;Sensors and Device SDKs&quot;&gt;&lt;/a&gt;Sensors and Device SDKs&lt;/h2&gt;&lt;p&gt;Exploring sensors and components available via the Android SDK:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Accessing the Camera and Stored Media (Camera, Photo Roll)&lt;/li&gt;
&lt;li&gt;Retrieving Location with LocationServices API (Location)&lt;/li&gt;
&lt;li&gt;Listening to Sensors using SensorManager (Light, Accelerometer)&lt;/li&gt;
&lt;li&gt;Audio Playback and Recording (MediaPlayer)&lt;/li&gt;
&lt;li&gt;Video Playback and Recording (VideoView)&lt;/li&gt;
&lt;li&gt;Google Maps Setup Guide (and Setup Genymotion)&lt;/li&gt;
&lt;li&gt;Google Maps API v2 Usage (Markers, InfoWindow)&lt;/li&gt;
&lt;li&gt;Connectivity using the Bluetooth API (Needs Attention)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Services&quot;&gt;&lt;a href=&quot;#Services&quot; class=&quot;headerlink&quot; title=&quot;Services&quot;&gt;&lt;/a&gt;Services&lt;/h2&gt;&lt;p&gt;Digging into how to run background services or leverage Android system services:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Starting Background Services (with IntentService and Receivers)&lt;/li&gt;
&lt;li&gt;Notifications (Persistent Notices on the Dashboard)&lt;/li&gt;
&lt;li&gt;Push Messaging (Parse Push and Broadcast Receiver Overview)&lt;/li&gt;
&lt;li&gt;Google Cloud Messaging (Detailed GCM Implementation)&lt;/li&gt;
&lt;li&gt;Real-time Messaging (Needs Attention)&lt;/li&gt;
&lt;li&gt;Managing Threads and Custom Services (Looper, Handler, ThreadPoolExecutor)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Testing&quot;&gt;&lt;a href=&quot;#Testing&quot; class=&quot;headerlink&quot; title=&quot;Testing&quot;&gt;&lt;/a&gt;Testing&lt;/h2&gt;&lt;p&gt;Covering automated testing frameworks and tools for Android:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android Testing Options&lt;/li&gt;
&lt;li&gt;Unit Testing with Robolectric&lt;/li&gt;
&lt;li&gt;UI Testing with Espresso&lt;/li&gt;
&lt;li&gt;UI Testing with Robotium (Needs Attention)&lt;/li&gt;
&lt;li&gt;Android Testing Framework (Needs Attention)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Libraries&quot;&gt;&lt;a href=&quot;#Libraries&quot; class=&quot;headerlink&quot; title=&quot;Libraries&quot;&gt;&lt;/a&gt;Libraries&lt;/h2&gt;&lt;p&gt;Covers usage of more advanced third-party libraries and SDKs that save time and improve the maintainability of your code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Must Have Libraries (Networking, Persistence, Compatibility, Convenience, etc)&lt;/li&gt;
&lt;li&gt;Popular External Tools (Analytics, Crash Reporting)&lt;/li&gt;
&lt;li&gt;Dependency Injection with Dagger 2&lt;/li&gt;
&lt;li&gt;Reducing View Boilerplate with Butterknife (View Annotations)&lt;/li&gt;
&lt;li&gt;Communicating with an Event Bus (Using EventBus to publish and receive events)&lt;/li&gt;
&lt;li&gt;Using Parceler (Creating Parcelable objects)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Production&quot;&gt;&lt;a href=&quot;#Production&quot; class=&quot;headerlink&quot; title=&quot;Production&quot;&gt;&lt;/a&gt;Production&lt;/h2&gt;&lt;p&gt;Covers guides specifically related to developing and publishing robust Android applications:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Publishing to the Play Store (Slides)&lt;/li&gt;
&lt;li&gt;Publishing with Android Studio&lt;/li&gt;
&lt;li&gt;Debugging and Profiling Apps (Needs Attention)&lt;/li&gt;
&lt;li&gt;Android Best Practices&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Workflow&quot;&gt;&lt;a href=&quot;#Workflow&quot; class=&quot;headerlink&quot; title=&quot;Workflow&quot;&gt;&lt;/a&gt;Workflow&lt;/h2&gt;&lt;p&gt;Focused on issues like deployment, dependency management, etc:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Getting Started with Gradle&lt;/li&gt;
&lt;li&gt;Using Android Studio&lt;/li&gt;
&lt;li&gt;Installing Android SDK Tools&lt;/li&gt;
&lt;li&gt;Building Gradle Projects with Jenkins CI&lt;/li&gt;
&lt;li&gt;Setting up Travis CI&lt;/li&gt;
&lt;li&gt;Collaborating on Projects with Git (Git, Team)&lt;/li&gt;
&lt;li&gt;Presenting an Android Device (Cast Device to Laptop)&lt;/li&gt;
&lt;li&gt;Recording Video of an Android Device&lt;/li&gt;
&lt;li&gt;Configuring ProGuard&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Contributing&quot;&gt;&lt;a href=&quot;#Contributing&quot; class=&quot;headerlink&quot; title=&quot;Contributing&quot;&gt;&lt;/a&gt;Contributing&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Contributing back to Android&lt;/li&gt;
&lt;li&gt;Building your own Android Library&lt;/li&gt;
&lt;li&gt;Open Source projects for Android Development&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Getting-Started&quot;&gt;&lt;a href=&quot;#Getting-Started&quot; class=&quot;headerlink&quot; title=&quot;Getting Started&quot;&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;&lt;h3 id=&quot;Totally-new-t
    
    </summary>
    
    
      <category term="Android" scheme="http://linww.in/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>关于Context的用法</title>
    <link href="http://linww.in/2015/10/21/%E5%85%B3%E4%BA%8EContext%E7%9A%84%E7%94%A8%E6%B3%95/"/>
    <id>http://linww.in/2015/10/21/关于Context的用法/</id>
    <published>2015-10-21T02:34:12.000Z</published>
    <updated>2016-05-28T08:17:30.316Z</updated>
    
    <content type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;Context提供了访问应用状态信息的途径。&lt;br&gt;它让 Activities, Fragment, and Services &lt;/p&gt;
&lt;h1 id=&quot;Context用来干嘛&quot;&gt;&lt;a href=&quot;#Context用来干嘛&quot; class=&quot;headerlink&quot; title=&quot;Context用来干嘛&quot;&gt;&lt;/a&gt;Context用来干嘛&lt;/h1&gt;&lt;h1 id=&quot;Application-vs-Activity&quot;&gt;&lt;a href=&quot;#Application-vs-Activity&quot; class=&quot;headerlink&quot; title=&quot;Application vs Activity&quot;&gt;&lt;/a&gt;Application vs Activity&lt;/h1&gt;&lt;h1 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.simplecodestuffs.com/what-is-context-in-android/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;What is a context - Simple Code Stuffs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://possiblemobile.com/2013/06/context/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Context, what context - Possible Mobile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.101apps.co.za/index.php/articles/all-about-using-android-s-context-class.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Context: What, where, &amp;amp; how? - 101 Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/3572463/what-is-context-in-android&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;What is a context - Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://android-developers.blogspot.com.tr/2009/01/avoiding-memory-leaks.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Avoiding memory leaks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;Context提供了访问应用状态信息的途径。&lt;br&gt;它让 Activities, Fragment, and Services &lt;/p&gt;
&lt;
    
    </summary>
    
    
      <category term="Android" scheme="http://linww.in/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Drawables</title>
    <link href="http://linww.in/2015/10/21/Drawables/"/>
    <id>http://linww.in/2015/10/21/Drawables/</id>
    <published>2015-10-21T02:34:12.000Z</published>
    <updated>2016-05-28T08:45:35.376Z</updated>
    
    <content type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;h1 id=&quot;实例&quot;&gt;&lt;a href=&quot;#实例&quot; class=&quot;headerlink&quot; title=&quot;实例&quot;&gt;&lt;/a&gt;实例&lt;/h1&gt;&lt;h2 id=&quot;Drawing-Shapes&quot;&gt;&lt;a href=&quot;#Drawing-Shapes&quot; class=&quot;headerlink&quot; title=&quot;Drawing Shapes&quot;&gt;&lt;/a&gt;Drawing Shapes&lt;/h2&gt;&lt;h2 id=&quot;Solid-Color-Shapes&quot;&gt;&lt;a href=&quot;#Solid-Color-Shapes&quot; class=&quot;headerlink&quot; title=&quot;Solid Color Shapes&quot;&gt;&lt;/a&gt;Solid Color Shapes&lt;/h2&gt;&lt;h2 id=&quot;Gradient-Colored-Shapes&quot;&gt;&lt;a href=&quot;#Gradient-Colored-Shapes&quot; class=&quot;headerlink&quot; title=&quot;Gradient Colored Shapes&quot;&gt;&lt;/a&gt;Gradient Colored Shapes&lt;/h2&gt;&lt;h2 id=&quot;State-List&quot;&gt;&lt;a href=&quot;#State-List&quot; class=&quot;headerlink&quot; title=&quot;State List&quot;&gt;&lt;/a&gt;State List&lt;/h2&gt;&lt;h2 id=&quot;Creating-a-Layer-List&quot;&gt;&lt;a href=&quot;#Creating-a-Layer-List&quot; class=&quot;headerlink&quot; title=&quot;Creating a Layer List&quot;&gt;&lt;/a&gt;Creating a Layer List&lt;/h2&gt;&lt;h2 id=&quot;Stretchable-Nine-Patch-Image&quot;&gt;&lt;a href=&quot;#Stretchable-Nine-Patch-Image&quot; class=&quot;headerlink&quot; title=&quot;Stretchable Nine-Patch Image&quot;&gt;&lt;/a&gt;Stretchable Nine-Patch Image&lt;/h2&gt;&lt;h2 id=&quot;Vector-Drawables&quot;&gt;&lt;a href=&quot;#Vector-Drawables&quot; class=&quot;headerlink&quot; title=&quot;Vector Drawables&quot;&gt;&lt;/a&gt;Vector Drawables&lt;/h2&gt;&lt;h1 id=&quot;定制ListView&quot;&gt;&lt;a href=&quot;#定制ListView&quot; class=&quot;headerlink&quot; title=&quot;定制ListView&quot;&gt;&lt;/a&gt;定制ListView&lt;/h1&gt;&lt;h1 id=&quot;运行时的Drawables&quot;&gt;&lt;a href=&quot;#运行时的Drawables&quot; class=&quot;headerlink&quot; title=&quot;运行时的Drawables&quot;&gt;&lt;/a&gt;运行时的Drawables&lt;/h1&gt;&lt;h1 id=&quot;其它Drawables资源类型&quot;&gt;&lt;a href=&quot;#其它Drawables资源类型&quot; class=&quot;headerlink&quot; title=&quot;其它Drawables资源类型&quot;&gt;&lt;/a&gt;其它Drawables资源类型&lt;/h1&gt;&lt;h1 id=&quot;资源&quot;&gt;&lt;a href=&quot;#资源&quot; class=&quot;headerlink&quot; title=&quot;资源&quot;&gt;&lt;/a&gt;资源&lt;/h1&gt;&lt;h1 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h1&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;h1 id=&quot;实例&quot;&gt;&lt;a href=&quot;#实例&quot; class=&quot;headerlink&quot; title=&quot;实例&quot;&gt;&lt;/a&gt;实例&lt;/h1&gt;&lt;h2 id
    
    </summary>
    
    
      <category term="Android" scheme="http://linww.in/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>关于ScrollView</title>
    <link href="http://linww.in/2015/10/21/%E5%85%B3%E4%BA%8EScrollView/"/>
    <id>http://linww.in/2015/10/21/关于ScrollView/</id>
    <published>2015-10-21T02:34:12.000Z</published>
    <updated>2016-05-23T12:58:27.408Z</updated>
    
    <content type="html">&lt;p&gt;如果一个APP要显示的内容长度超出了手机的屏幕高度，就可以将这些内容设为垂直滚动，这时候就需要用到&lt;a href=&quot;https://developer.android.com/reference/android/widget/ScrollView.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ScrollView&lt;/a&gt;。&lt;br&gt;&lt;img src=&quot;https://camo.githubusercontent.com/ce05a0544dc254a40425cc4401295d58ebe4727c/68747470733a2f2f692e696d6775722e636f6d2f315461494e36672e676966&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;垂直滚动&quot;&gt;&lt;a href=&quot;#垂直滚动&quot; class=&quot;headerlink&quot; title=&quot;垂直滚动&quot;&gt;&lt;/a&gt;垂直滚动&lt;/h2&gt;&lt;p&gt;要让内容可被垂直滚动，只要用&lt;code&gt;&amp;lt;ScrollView\&amp;gt;&lt;/code&gt;包围内容就可以了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;ScrollView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  android:layout_width=&amp;quot;match_parent&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  android:layout_height=&amp;quot;match_parent&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;LinearLayout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_width=&amp;quot;match_parent&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:layout_height=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        android:orientation=&amp;quot;vertical&amp;quot; &amp;gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;TextView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              android:id=&amp;quot;@+id/tv_long&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              android:layout_width=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              android:layout_height=&amp;quot;match_parent&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              android:text=&amp;quot;@string/really_long_string&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/TextView&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;Button&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              android:id=&amp;quot;@+id/btn_act&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              android:layout_width=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              android:layout_height=&amp;quot;wrap_content&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              android:text=&amp;quot;View&amp;quot; &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/Button&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/ScrollView&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;code&gt;&amp;lt;ScrollView\&amp;gt;&lt;/code&gt;只能包含一个子元素&lt;/strong&gt;，所以如果要多种类型的内容能够被滚动，你需要像上面那样，用一个layout元素包围住内容。&lt;br&gt;在某些情况下，你可能会想要把内容放在可滚动内容的正下方，例如一些你一滚动完就要选择接受的“使用须知”。在这种情况下，你可能需要设置&lt;a href=&quot;https://developer.android.com/reference/android/widget/ScrollView.html#attr_android:fillViewport&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android:fillViewport&lt;/a&gt;这个属性为”true”。具体的例子请看&lt;br&gt;Romain Guy的这篇&lt;a href=&quot;http://www.curious-creature.com/2010/08/15/scrollviews-handy-trick/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ScrollView’s handy trick&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;水平滚动&quot;&gt;&lt;a href=&quot;#水平滚动&quot; class=&quot;headerlink&quot; title=&quot;水平滚动&quot;&gt;&lt;/a&gt;水平滚动&lt;/h2&gt;&lt;h2 id=&quot;滚动的TextView&quot;&gt;&lt;a href=&quot;#滚动的TextView&quot; class=&quot;headerlink&quot; title=&quot;滚动的TextView&quot;&gt;&lt;/a&gt;滚动的TextView&lt;/h2&gt;&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://examples.javacodegeeks.com/android/core/ui/scrollview/android-scrollview-example/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://examples.javacodegeeks.com/android/core/ui/scrollview/android-scrollview-example/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.curious-creature.org/2010/08/15/scrollviews-handy-trick/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.curious-creature.org/2010/08/15/scrollviews-handy-trick/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.androidhub4you.com/2013/05/simple-scroll-view-example-in-android.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.androidhub4you.com/2013/05/simple-scroll-view-example-in-android.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://developer.android.com/reference/android/widget/ScrollView.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://developer.android.com/reference/android/widget/ScrollView.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://developer.android.com/reference/android/widget/HorizontalScrollView.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://developer.android.com/reference/android/widget/HorizontalScrollView.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.whitesof.com/?q=tutorials/android/android-scroll-view-tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.whitesof.com/?q=tutorials/android/android-scroll-view-tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;如果一个APP要显示的内容长度超出了手机的屏幕高度，就可以将这些内容设为垂直滚动，这时候就需要用到&lt;a href=&quot;https://developer.android.com/reference/android/widget/ScrollView.html&quot; target=
    
    </summary>
    
    
      <category term="Android" scheme="http://linww.in/tags/Android/"/>
    
  </entry>
  
</feed>
